# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'trap_mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox,QDial,QVBoxLayout,QApplication, QMainWindow, QWidget, QVBoxLayout
from pyqtgraph import PlotWidget, plot
from PyQt5.QtCore import QDate,QTime,QDateTime,QTimer
import pyqtgraph as pg
import time
from PyQt5.QtGui import QPixmap
import os
import pandas as pd
from matplotlib.backends.backend_qt5agg import FigureCanvas as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure
import matplotlib.pyplot as plt
import serial




class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Sediment Trap")
        MainWindow.resize(731, 810)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(130, 150, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(490, 150, 91, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(360, 150, 111, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_2.setFont(font)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(110, 105, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(600, 150, 91, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(130, 200, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(40, 157, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(40, 207, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(130, 250, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(40, 257, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(130, 300, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(40, 307, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(130, 350, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(40, 357, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(130, 400, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(40, 407, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(130, 450, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(40, 457, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(130, 500, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(40, 507, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(40, 110, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.centralwidget)
        self.label_19.setGeometry(QtCore.QRect(130, 550, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.label_21 = QtWidgets.QLabel(self.centralwidget)
        self.label_21.setGeometry(QtCore.QRect(40, 557, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.label_23 = QtWidgets.QLabel(self.centralwidget)
        self.label_23.setGeometry(QtCore.QRect(130, 600, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.centralwidget)
        self.label_24.setGeometry(QtCore.QRect(130, 650, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_24.setFont(font)
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(40, 607, 81, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(40, 657, 71, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_26.setFont(font)
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.centralwidget)
        self.label_27.setGeometry(QtCore.QRect(40, 707, 81, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")
        self.label_28 = QtWidgets.QLabel(self.centralwidget)
        self.label_28.setGeometry(QtCore.QRect(130, 700, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_28.setFont(font)
        self.label_28.setObjectName("label_28")
        self.label_20 = QtWidgets.QLabel(self.centralwidget)
        self.label_20.setGeometry(QtCore.QRect(40, 30, 331, 51))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(360, 250, 331, 531))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.listWidget.setFont(font)
        self.listWidget.setObjectName("listWidget")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(480, 30, 101, 51))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(590, 30, 101, 51))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 90, 691, 701))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_3.setGeometry(QtCore.QRect(470, 15, 91, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_4.setGeometry(QtCore.QRect(580, 15, 91, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.label_22 = QtWidgets.QLabel(self.groupBox)
        self.label_22.setGeometry(QtCore.QRect(340, 15, 111, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.label_29 = QtWidgets.QLabel(self.groupBox)
        self.label_29.setGeometry(QtCore.QRect(110, 658, 211, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_29.setFont(font)
        self.label_29.setObjectName("label_29")
        self.label_30 = QtWidgets.QLabel(self.groupBox)
        self.label_30.setGeometry(QtCore.QRect(15, 664, 91, 20))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_30.setFont(font)
        self.label_30.setObjectName("label_30")
        self.comboBox_3 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_3.setGeometry(QtCore.QRect(340, 107, 111, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.comboBox_3.setFont(font)
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit_4.setGeometry(QtCore.QRect(470, 107, 91, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_5.setGeometry(QtCore.QRect(580, 107, 91, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(20, 21, 691, 71))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.groupBox_2.raise_()
        self.groupBox.raise_()
        self.label.raise_()
        self.lineEdit_2.raise_()
        self.comboBox_2.raise_()
        self.label_2.raise_()
        self.pushButton.raise_()
        self.label_3.raise_()
        self.label_8.raise_()
        self.label_9.raise_()
        self.label_4.raise_()
        self.label_10.raise_()
        self.label_5.raise_()
        self.label_11.raise_()
        self.label_6.raise_()
        self.label_12.raise_()
        self.label_7.raise_()
        self.label_13.raise_()
        self.label_14.raise_()
        self.label_15.raise_()
        self.label_16.raise_()
        self.label_17.raise_()
        self.label_18.raise_()
        self.label_19.raise_()
        self.label_21.raise_()
        self.label_23.raise_()
        self.label_24.raise_()
        self.label_25.raise_()
        self.label_26.raise_()
        self.label_27.raise_()
        self.label_28.raise_()
        self.label_20.raise_()
        self.listWidget.raise_()
        self.pushButton_2.raise_()
        self.pushButton_3.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # 디지털 시계
        self.timer = QtCore.QTimer(MainWindow)
        self.timer.timeout.connect(self.time_out)
        self.timer.timeout.connect(self.time_out_2)
        self.timer.start(1000)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 버튼클릭함수
        self.pushButton_4.clicked.connect(self.delay_time)
        self.pushButton.clicked.connect(self.time_term)
        self.pushButton_2.clicked.connect(self.check_value)
        self.pushButton_3.clicked.connect(self.transfer_value)


        # 현재시간 맞추기
        currentTime = QDateTime.currentDateTime()
        timeDisplay = currentTime.toString('yyyy-MM-dd hh:mm:ss')
        self.label.setText(timeDisplay)
        self.label_3.setText(timeDisplay)
        self.label_4.setText(timeDisplay)
        self.label_5.setText(timeDisplay)
        self.label_6.setText(timeDisplay)
        self.label_7.setText(timeDisplay)
        self.label_14.setText(timeDisplay)
        self.label_16.setText(timeDisplay)
        self.label_19.setText(timeDisplay)
        self.label_23.setText(timeDisplay)
        self.label_24.setText(timeDisplay)
        self.label_28.setText(timeDisplay)
        self.label_29.setText(timeDisplay)
##
##        # 모터
##        self.ina1 = Pin('X3', Pin.OUT_PP)
##        self.ina2 = Pin('X2', Pin.OUT_PP)
##        self.pwma = Pin('X1')
##        self.tim = Timer(2, freq=1000)
##        self.ch = tim.channel(1, Timer.PWM, pin=pwma)
##        self.ch.pulse_width_percent(50)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Sediment Trap"))
        self.label.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.comboBox_2.setItemText(0, _translate("MainWindow", "TIME TERM"))
        self.comboBox_2.setItemText(1, _translate("MainWindow", "DAY"))
        self.comboBox_2.setItemText(2, _translate("MainWindow", "HOUR"))
        self.comboBox_2.setItemText(3, _translate("MainWindow", "MINUTE"))
        self.label_2.setText(_translate("MainWindow", "        START TIME"))
        self.pushButton.setText(_translate("MainWindow", "확인"))
        self.label_3.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_8.setText(_translate("MainWindow", "CYCLE 1"))
        self.label_9.setText(_translate("MainWindow", "CYCLE 2"))
        self.label_4.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_10.setText(_translate("MainWindow", "CYCLE 3"))
        self.label_5.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_11.setText(_translate("MainWindow", "CYCLE 4"))
        self.label_6.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_12.setText(_translate("MainWindow", "CYCLE 5"))
        self.label_7.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_13.setText(_translate("MainWindow", "CYCLE 6"))
        self.label_14.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_15.setText(_translate("MainWindow", "CYCLE 7"))
        self.label_16.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_17.setText(_translate("MainWindow", "CYCLE 8"))
        self.label_18.setText(_translate("MainWindow", " CYCLE"))
        self.label_19.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_21.setText(_translate("MainWindow", "CYCLE 9"))
        self.label_23.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_24.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_25.setText(_translate("MainWindow", "CYCLE 10"))
        self.label_26.setText(_translate("MainWindow", "CYCLE 11"))
        self.label_27.setText(_translate("MainWindow", "CYCLE 12"))
        self.label_28.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_20.setText(_translate("MainWindow", "         2000-01-01 00:00:00"))
        self.pushButton_2.setText(_translate("MainWindow", "설정값 확인"))
        self.pushButton_3.setText(_translate("MainWindow", "저장"))
        self.pushButton_4.setText(_translate("MainWindow", "확인"))
        self.label_22.setText(_translate("MainWindow", "DELAY MINUTE"))
        self.label_29.setText(_translate("MainWindow", "2000-01-01 00:00:00"))
        self.label_30.setText(_translate("MainWindow", "CYCLE END"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "모터 방향"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "시계"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "반시계"))
        self.pushButton_5.setText(_translate("MainWindow", "확인"))
    # 시계 함수
    def time_out(self):
        currentTime = QDateTime.currentDateTime()
        timeDisplay = currentTime.toString('         yyyy-MM-dd hh:mm:ss')
        self.label_20.setText(timeDisplay)


    def time_out_2(self):

        try:
            datetime = QDateTime.currentDateTime()

            self.start_time_1 = datetime.addSecs(int(self.delaytime_value_sec))
            timeDisplay = self.start_time_1.toString('yyyy-MM-dd hh:mm:ss')
            self.label.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_2 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value))
            timeDisplay = self.start_time_2.toString('yyyy-MM-dd hh:mm:ss')
            self.label_3.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_3 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*2)
            timeDisplay = self.start_time_3.toString('yyyy-MM-dd hh:mm:ss')
            self.label_4.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_4 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*3)
            timeDisplay = self.start_time_4.toString('yyyy-MM-dd hh:mm:ss')
            self.label_5.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_5 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*4)
            timeDisplay = self.start_time_5.toString('yyyy-MM-dd hh:mm:ss')
            self.label_6.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_6 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*5)
            timeDisplay = self.start_time_6.toString('yyyy-MM-dd hh:mm:ss')
            self.label_7.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_7 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*6)
            timeDisplay = self.start_time_7.toString('yyyy-MM-dd hh:mm:ss')
            self.label_14.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_8 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*7)
            timeDisplay = self.start_time_8.toString('yyyy-MM-dd hh:mm:ss')
            self.label_16.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_9 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*8)
            timeDisplay = self.start_time_9.toString('yyyy-MM-dd hh:mm:ss')
            self.label_19.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_10 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*9)
            timeDisplay = self.start_time_10.toString('yyyy-MM-dd hh:mm:ss')
            self.label_23.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_11 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*10)
            timeDisplay = self.start_time_11.toString('yyyy-MM-dd hh:mm:ss')
            self.label_24.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_12 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*11)
            timeDisplay = self.start_time_12.toString('yyyy-MM-dd hh:mm:ss')
            self.label_28.setText(timeDisplay)
            #------------------------------------------------------------

            self.end_time = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*12)
            timeDisplay = self.end_time.toString('yyyy-MM-dd hh:mm:ss')
            self.label_29.setText(timeDisplay)
            #------------------------------------------------------------

        except AttributeError:
            currentTime = QDateTime.currentDateTime()
            timeDisplay = currentTime.toString('yyyy-MM-dd hh:mm:ss')
            self.label.setText(timeDisplay)
            self.label_3.setText(timeDisplay)
            self.label_4.setText(timeDisplay)
            self.label_5.setText(timeDisplay)
            self.label_6.setText(timeDisplay)
            self.label_7.setText(timeDisplay)
            self.label_14.setText(timeDisplay)
            self.label_16.setText(timeDisplay)
            self.label_19.setText(timeDisplay)
            self.label_23.setText(timeDisplay)
            self.label_24.setText(timeDisplay)
            self.label_28.setText(timeDisplay)
            self.label_29.setText(timeDisplay)
            
        

    def delay_time(self):
        self.delaytime_value_sec = 0
        self.delaytime_value_sec = int(self.lineEdit_3.text())*60

        now = QTime.currentTime()
        now = now.toString('hh:mm:ss')
        query = "[" + now + "] DELAY MINUTE : "+str(self.lineEdit_3.text())+" MINUTE 저장 완료"
        self.listWidget.addItem(query)

    def time_term(self):

        try:
            self.cycle_sec_value = 0
##            if self.comboBox_2.currentText() == "TIME TERM":
##                now = QTime.currentTime()
##                now = now.toString('hh:mm:ss')
##                query = "[" + now + "] 설정값을 다시 확인해주세요"
##                self.listWidget.addItem(query)
##            if self.lineEdit_2.text() == "":
##                now = QTime.currentTime()
##                now = now.toString('hh:mm:ss')
##                query = "[" + now + "] 설정값을 다시 확인해주세요"
##                self.listWidget.addItem(query)
                
            if self.comboBox_2.currentText() == "DAY":
                self.cycle_sec_value = int(self.lineEdit_2.text())*24*60*60
            if self.comboBox_2.currentText() == "HOUR":
                self.cycle_sec_value = int(self.lineEdit_2.text())*60*60
            if self.comboBox_2.currentText() == "MINUTE":
                self.cycle_sec_value = int(self.lineEdit_2.text())*60

            self.cycle_sec_value_2 = self.lineEdit_2.text()
            self.time_term_value = self.comboBox_2.currentText()

            self.sec_value = int(self.delaytime_value_sec + self.cycle_sec_value)
            datetime = QDateTime.currentDateTime()

            self.start_time_1 = datetime.addSecs(int(self.delaytime_value_sec))
            timeDisplay = self.start_time_1.toString('yyyy-MM-dd hh:mm:ss')
            self.label.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_2 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value))
            timeDisplay = self.start_time_2.toString('yyyy-MM-dd hh:mm:ss')
            self.label_3.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_3 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*2)
            timeDisplay = self.start_time_3.toString('yyyy-MM-dd hh:mm:ss')
            self.label_4.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_4 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*3)
            timeDisplay = self.start_time_4.toString('yyyy-MM-dd hh:mm:ss')
            self.label_5.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_5 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*4)
            timeDisplay = self.start_time_5.toString('yyyy-MM-dd hh:mm:ss')
            self.label_6.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_6 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*5)
            timeDisplay = self.start_time_6.toString('yyyy-MM-dd hh:mm:ss')
            self.label_7.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_7 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*6)
            timeDisplay = self.start_time_7.toString('yyyy-MM-dd hh:mm:ss')
            self.label_14.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_8 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*7)
            timeDisplay = self.start_time_8.toString('yyyy-MM-dd hh:mm:ss')
            self.label_16.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_9 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*8)
            timeDisplay = self.start_time_9.toString('yyyy-MM-dd hh:mm:ss')
            self.label_19.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_10 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*9)
            timeDisplay = self.start_time_10.toString('yyyy-MM-dd hh:mm:ss')
            self.label_23.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_11 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*10)
            timeDisplay = self.start_time_11.toString('yyyy-MM-dd hh:mm:ss')
            self.label_24.setText(timeDisplay)
            #------------------------------------------------------------

            self.start_time_12 = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*11)
            timeDisplay = self.start_time_12.toString('yyyy-MM-dd hh:mm:ss')
            self.label_28.setText(timeDisplay)
            #------------------------------------------------------------

            self.end_time = datetime.addSecs(int(self.delaytime_value_sec)+int(self.cycle_sec_value)*12)
            timeDisplay = self.end_time.toString('yyyy-MM-dd hh:mm:ss')
            self.label_29.setText(timeDisplay)
            #------------------------------------------------------------

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] CYCLE TERM : "+str(self.cycle_sec_value_2)+" "+str(self.time_term_value) + " 저장 완료"
            self.listWidget.addItem(query)
        except ValueError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "]"
            self.listWidget.addItem(query)
            query = "설정값을 다시 확인해주세요"
            self.listWidget.addItem(query)
            


    def check_value(self):

        try:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "]"
            self.listWidget.addItem(query)

            query = "DELAY MINUTE : " + str(int(int(self.delaytime_value_sec)/60)) + " MINUTE"
            self.listWidget.addItem(query)
            query = "CYCLE TERM : "+  str(self.cycle_sec_value_2)+" "+str(self.time_term_value)
            self.listWidget.addItem(query)
            query = "예상 시작시간"
            self.listWidget.addItem(query)
            query = "CYCLE 1 : "+self.label.text()
            self.listWidget.addItem(query)
            query = "CYCLE 2 : "+self.label_3.text()
            self.listWidget.addItem(query)
            query = "CYCLE 3 : "+self.label_4.text()
            self.listWidget.addItem(query)
            query = "CYCLE 4 : "+self.label_5.text()
            self.listWidget.addItem(query)
            query = "CYCLE 5 : "+self.label_6.text()
            self.listWidget.addItem(query)
            query = "CYCLE 6 : "+self.label_7.text()
            self.listWidget.addItem(query)
            query = "CYCLE 7 : "+self.label_14.text()
            self.listWidget.addItem(query)
            query = "CYCLE 8 : "+self.label_16.text()
            self.listWidget.addItem(query)
            query = "CYCLE 9 : "+self.label_19.text()
            self.listWidget.addItem(query)
            query = "CYCLE 10 : "+self.label_23.text()
            self.listWidget.addItem(query)
            query = "CYCLE 11 : "+self.label_24.text()
            self.listWidget.addItem(query)
            query = "CYCLE 12 : "+self.label_28.text()
            self.listWidget.addItem(query)
            query = "CYCLE END : "+self.label_29.text()
            self.listWidget.addItem(query)

        except AttributeError :
            query = "설정 값을 다시확인해주세요"
            self.listWidget.addItem(query)

    def transfer_value(self):

        try:
            filename = "config.cfg"
            f = open(filename,"w")
            if self.time_term_value == "DAY":
                transfer_text = "startdelaytimeminute "+str(int(int(self.delaytime_value_sec)/60))+" off timecycleminute 0 off timecyclehour 0 on timecycleday "+ str(self.cycle_sec_value_2)
                f.write(transfer_text)
                f.close()

                now = QTime.currentTime()
                now = now.toString('hh:mm:ss')
                query = "[" + now + "] CONFIG.CFG 저장완료"
                self.listWidget.addItem(query)
                
            if self.time_term_value == "HOUR":
                transfer_text = "startdelaytimeminute "+str(int(int(self.delaytime_value_sec)/60))+" off timecycleminute 0 on timecyclehour "+ str(self.cycle_sec_value_2)+" off timecycleday 0"
                f.write(transfer_text)
                f.close()

                now = QTime.currentTime()
                now = now.toString('hh:mm:ss')
                query = "[" + now + "] CONFIG.CFG 저장완료"
                self.listWidget.addItem(query)
                
            if self.time_term_value == "MINUTE":
                transfer_text = "startdelaytimeminute "+str(int(int(self.delaytime_value_sec)/60))+" on timecycleminute "+ str(self.cycle_sec_value_2) + " off timecyclehour 0  off timecycleday 0"
                f.write(transfer_text)
                f.close()

                now = QTime.currentTime()
                now = now.toString('hh:mm:ss')
                query = "[" + now + "] CONFIG.CFG 저장완료"
                self.listWidget.addItem(query)

            

        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "]"
            self.listWidget.addItem(query)
            query = "설정값을 다시 확인해주세요"
            self.listWidget.addItem(query)
##
##    def motor_move(self):
##        
##
##        if str(self.comboBox_3.currentText() == "시계"):
            
##            
##    def RotateCW(self):
##        if str(self.comboBox_3.currentText() == "시계"):
##            self.ina1.value(1)
##            self.ina2.value(0)
##            ch.pulse_width_percent(60)
##
##    def RotateCCW(self):
##        if str(self.comboBox_3.currentText() == "시계"):
##            self.ina1.value(1)
##            self.self.ina2.value(0)
##            #duty_16 = int((duty*65536)/100)
##        #     duty_16 = int((duty*65536)/800)
##        #     pwma.duty_u16(duty_16)
##            self.ch.pulse_width_percent(40)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())


