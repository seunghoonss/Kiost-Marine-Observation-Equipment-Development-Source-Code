# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window1.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from pyqtgraph import PlotWidget, plot
from PyQt5.QtCore import QDate,QTime,QDateTime,QTimer
import pyqtgraph as pg
import time
from PyQt5.QtGui import QPixmap
import os
import pandas as pd
from matplotlib.backends.backend_qt5agg import FigureCanvas as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure
import matplotlib.pyplot as plt
import serial
from window2 import Ui_SerialWindow
import time
from serial import SerialException
import threading
from PyQt5.QtWidgets import QMessageBox



ranglist = [[0 for j in range(4)] for i in range(21)]
full_list = [0 for t in range(6)]



class Ui_MainWindow(object,):
    
    def setupUi(self, MainWindow):
        self.msg=QMessageBox()
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(1350, 787)
        MainWindow.setFocusPolicy(QtCore.Qt.NoFocus)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(740, 15, 241, 61))
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(90, 25, 471, 51))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(19)
        font.setBold(True)
        font.setWeight(50)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 80, 1331, 671))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.scrollArea = QtWidgets.QScrollArea(self.tab)
        self.scrollArea.setGeometry(QtCore.QRect(10, 10, 561, 631))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        self.scrollArea.setFont(font)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.scrollArea.setMidLineWidth(0)
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 534, 677))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_69 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_69.setObjectName("verticalLayout_69")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4)
        #self.lineEdit_27 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        #self.lineEdit_27.setObjectName("lineEdit_27")
        #self.horizontalLayout_3.addWidget(self.lineEdit_27)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.DelayPumpmlResetBtn = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.DelayPumpmlResetBtn.setFont(font)
        self.DelayPumpmlResetBtn.setObjectName("DelayPumpmlResetBtn")
        self.horizontalLayout_7.addWidget(self.DelayPumpmlResetBtn)
        self.SaveCycleBtn = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.SaveCycleBtn.setFont(font)
        self.SaveCycleBtn.setObjectName("SaveCycleBtn")
        self.horizontalLayout_7.addWidget(self.SaveCycleBtn)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_7)
        self.verticalLayout_69.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.label_62 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_62.setObjectName("label_62")
        self.horizontalLayout_24.addWidget(self.label_62)
        self.dateEdit_1 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_1.setObjectName("dateEdit_1")
        self.horizontalLayout_24.addWidget(self.dateEdit_1)
        self.timeEdit_1 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_1.setObjectName("timeEdit_1")
        self.horizontalLayout_24.addWidget(self.timeEdit_1)
        self.label_63 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_63.setObjectName("label_63")
        self.horizontalLayout_24.addWidget(self.label_63)
        self.lineEdit_1 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_1.setObjectName("lineEdit_1")
        self.horizontalLayout_24.addWidget(self.lineEdit_1)
        self.label_64 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_64.setObjectName("label_64")
        self.horizontalLayout_24.addWidget(self.label_64)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_24.addWidget(self.lineEdit_2)
        self.verticalLayout_69.addLayout(self.horizontalLayout_24)
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.label_56 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_56.setObjectName("label_56")
        self.horizontalLayout_22.addWidget(self.label_56)
        self.dateEdit_2 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_2.setObjectName("dateEdit_2")
        self.horizontalLayout_22.addWidget(self.dateEdit_2)
        self.timeEdit_2 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_2.setObjectName("timeEdit_2")
        self.horizontalLayout_22.addWidget(self.timeEdit_2)
        self.label_59 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_59.setObjectName("label_59")
        self.horizontalLayout_22.addWidget(self.label_59)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout_22.addWidget(self.lineEdit_3)
        self.label_58 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_58.setObjectName("label_58")
        self.horizontalLayout_22.addWidget(self.label_58)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_22.addWidget(self.lineEdit_4)
        self.verticalLayout_69.addLayout(self.horizontalLayout_22)
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.label_89 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_89.setObjectName("label_89")
        self.horizontalLayout_33.addWidget(self.label_89)
        self.dateEdit_3 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_3.setObjectName("dateEdit_3")
        self.horizontalLayout_33.addWidget(self.dateEdit_3)
        self.timeEdit_3 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_3.setObjectName("timeEdit_3")
        self.horizontalLayout_33.addWidget(self.timeEdit_3)
        self.label_90 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_90.setObjectName("label_90")
        self.horizontalLayout_33.addWidget(self.label_90)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.horizontalLayout_33.addWidget(self.lineEdit_5)
        self.label_91 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_91.setObjectName("label_91")
        self.horizontalLayout_33.addWidget(self.label_91)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.horizontalLayout_33.addWidget(self.lineEdit_6)
        self.verticalLayout_69.addLayout(self.horizontalLayout_33)
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.label_68 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_68.setObjectName("label_68")
        self.horizontalLayout_26.addWidget(self.label_68)
        self.dateEdit_4 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_4.setObjectName("dateEdit_4")
        self.horizontalLayout_26.addWidget(self.dateEdit_4)
        self.timeEdit_4 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_4.setObjectName("timeEdit_4")
        self.horizontalLayout_26.addWidget(self.timeEdit_4)
        self.label_69 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_69.setObjectName("label_69")
        self.horizontalLayout_26.addWidget(self.label_69)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.horizontalLayout_26.addWidget(self.lineEdit_7)
        self.label_70 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_70.setObjectName("label_70")
        self.horizontalLayout_26.addWidget(self.label_70)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.horizontalLayout_26.addWidget(self.lineEdit_8)
        self.verticalLayout_69.addLayout(self.horizontalLayout_26)
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        self.label_86 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_86.setObjectName("label_86")
        self.horizontalLayout_32.addWidget(self.label_86)
        self.dateEdit_5 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_5.setObjectName("dateEdit_5")
        self.horizontalLayout_32.addWidget(self.dateEdit_5)
        self.timeEdit_5 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_5.setObjectName("timeEdit_5")
        self.horizontalLayout_32.addWidget(self.timeEdit_5)
        self.label_87 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_87.setObjectName("label_87")
        self.horizontalLayout_32.addWidget(self.label_87)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.horizontalLayout_32.addWidget(self.lineEdit_9)
        self.label_88 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_88.setObjectName("label_88")
        self.horizontalLayout_32.addWidget(self.label_88)
        self.lineEdit_10 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.horizontalLayout_32.addWidget(self.lineEdit_10)
        self.verticalLayout_69.addLayout(self.horizontalLayout_32)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.label_77 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_77.setObjectName("label_77")
        self.horizontalLayout_29.addWidget(self.label_77)
        self.dateEdit_6 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_6.setObjectName("dateEdit_6")
        self.horizontalLayout_29.addWidget(self.dateEdit_6)
        self.timeEdit_6 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_6.setObjectName("timeEdit_6")
        self.horizontalLayout_29.addWidget(self.timeEdit_6)
        self.label_78 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_78.setObjectName("label_78")
        self.horizontalLayout_29.addWidget(self.label_78)
        self.lineEdit_11 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.horizontalLayout_29.addWidget(self.lineEdit_11)
        self.label_79 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_79.setObjectName("label_79")
        self.horizontalLayout_29.addWidget(self.label_79)
        self.lineEdit_12 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.horizontalLayout_29.addWidget(self.lineEdit_12)
        self.verticalLayout_69.addLayout(self.horizontalLayout_29)
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.label_71 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_71.setObjectName("label_71")
        self.horizontalLayout_27.addWidget(self.label_71)
        self.dateEdit_8 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_8.setObjectName("dateEdit_8")
        self.horizontalLayout_27.addWidget(self.dateEdit_8)
        self.timeEdit_8 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_8.setObjectName("timeEdit_8")
        self.horizontalLayout_27.addWidget(self.timeEdit_8)
        self.label_72 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_72.setObjectName("label_72")
        self.horizontalLayout_27.addWidget(self.label_72)
        self.lineEdit_13 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.horizontalLayout_27.addWidget(self.lineEdit_13)
        self.label_73 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_73.setObjectName("label_73")
        self.horizontalLayout_27.addWidget(self.label_73)
        self.lineEdit_14 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.horizontalLayout_27.addWidget(self.lineEdit_14)
        self.verticalLayout_69.addLayout(self.horizontalLayout_27)
        self.horizontalLayout_38 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_38.setObjectName("horizontalLayout_38")
        self.label_105 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_105.setObjectName("label_105")
        self.horizontalLayout_38.addWidget(self.label_105)
        self.dateEdit_19 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_19.setObjectName("dateEdit_19")
        self.horizontalLayout_38.addWidget(self.dateEdit_19)
        self.timeEdit_19 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_19.setObjectName("timeEdit_19")
        self.horizontalLayout_38.addWidget(self.timeEdit_19)
        self.label_106 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_106.setObjectName("label_106")
        self.horizontalLayout_38.addWidget(self.label_106)
        self.lineEdit_36 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_36.setObjectName("lineEdit_36")
        self.horizontalLayout_38.addWidget(self.lineEdit_36)
        self.label_113 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_113.setObjectName("label_113")
        self.horizontalLayout_38.addWidget(self.label_113)
        self.lineEdit_37 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_37.setObjectName("lineEdit_37")
        self.horizontalLayout_38.addWidget(self.lineEdit_37)
        self.verticalLayout_69.addLayout(self.horizontalLayout_38)
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.label_74 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_74.setObjectName("label_74")
        self.horizontalLayout_28.addWidget(self.label_74)
        self.dateEdit_9 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_9.setObjectName("dateEdit_9")
        self.horizontalLayout_28.addWidget(self.dateEdit_9)
        self.timeEdit_9 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_9.setObjectName("timeEdit_9")
        self.horizontalLayout_28.addWidget(self.timeEdit_9)
        self.label_75 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_75.setObjectName("label_75")
        self.horizontalLayout_28.addWidget(self.label_75)
        self.lineEdit_15 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.horizontalLayout_28.addWidget(self.lineEdit_15)
        self.label_76 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_76.setObjectName("label_76")
        self.horizontalLayout_28.addWidget(self.label_76)
        self.lineEdit_16 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.horizontalLayout_28.addWidget(self.lineEdit_16)
        self.verticalLayout_69.addLayout(self.horizontalLayout_28)
        self.label_5 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_69.addWidget(self.label_5)
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_35.setObjectName("horizontalLayout_35")
        self.label_95 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_95.setObjectName("label_95")
        self.horizontalLayout_35.addWidget(self.label_95)
        self.dateEdit_10 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_10.setObjectName("dateEdit_10")
        self.horizontalLayout_35.addWidget(self.dateEdit_10)
        self.timeEdit_10 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_10.setObjectName("timeEdit_10")
        self.horizontalLayout_35.addWidget(self.timeEdit_10)
        self.label_96 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_96.setObjectName("label_96")
        self.horizontalLayout_35.addWidget(self.label_96)
        self.lineEdit_17 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.horizontalLayout_35.addWidget(self.lineEdit_17)
        self.label_97 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_97.setObjectName("label_97")
        self.horizontalLayout_35.addWidget(self.label_97)
        self.lineEdit_18 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.horizontalLayout_35.addWidget(self.lineEdit_18)
        self.verticalLayout_69.addLayout(self.horizontalLayout_35)
        self.horizontalLayout_37 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_37.setObjectName("horizontalLayout_37")
        self.label_101 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_101.setObjectName("label_101")
        self.horizontalLayout_37.addWidget(self.label_101)
        self.dateEdit_11 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_11.setObjectName("dateEdit_11")
        self.horizontalLayout_37.addWidget(self.dateEdit_11)
        self.timeEdit_11 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_11.setObjectName("timeEdit_11")
        self.horizontalLayout_37.addWidget(self.timeEdit_11)
        self.label_102 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_102.setObjectName("label_102")
        self.horizontalLayout_37.addWidget(self.label_102)
        self.lineEdit_19 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.horizontalLayout_37.addWidget(self.lineEdit_19)
        self.label_103 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_103.setObjectName("label_103")
        self.horizontalLayout_37.addWidget(self.label_103)
        self.lineEdit_20 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.horizontalLayout_37.addWidget(self.lineEdit_20)
        self.verticalLayout_69.addLayout(self.horizontalLayout_37)
        self.horizontalLayout_39 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_39.setObjectName("horizontalLayout_39")
        self.label_107 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_107.setObjectName("label_107")
        self.horizontalLayout_39.addWidget(self.label_107)
        self.dateEdit_12 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_12.setObjectName("dateEdit_12")
        self.horizontalLayout_39.addWidget(self.dateEdit_12)
        self.timeEdit_12 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_12.setObjectName("timeEdit_12")
        self.horizontalLayout_39.addWidget(self.timeEdit_12)
        self.label_108 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_108.setObjectName("label_108")
        self.horizontalLayout_39.addWidget(self.label_108)
        self.lineEdit_21 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.horizontalLayout_39.addWidget(self.lineEdit_21)
        self.label_109 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_109.setObjectName("label_109")
        self.horizontalLayout_39.addWidget(self.label_109)
        self.lineEdit_22 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_22.setObjectName("lineEdit_22")
        self.horizontalLayout_39.addWidget(self.lineEdit_22)
        self.verticalLayout_69.addLayout(self.horizontalLayout_39)
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.label_80 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_80.setObjectName("label_80")
        self.horizontalLayout_30.addWidget(self.label_80)
        self.dateEdit_13 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_13.setObjectName("dateEdit_13")
        self.horizontalLayout_30.addWidget(self.dateEdit_13)
        self.timeEdit_13 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_13.setObjectName("timeEdit_13")
        self.horizontalLayout_30.addWidget(self.timeEdit_13)
        self.label_81 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_81.setObjectName("label_81")
        self.horizontalLayout_30.addWidget(self.label_81)
        self.lineEdit_23 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_23.setObjectName("lineEdit_23")
        self.horizontalLayout_30.addWidget(self.lineEdit_23)
        self.label_82 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_82.setObjectName("label_82")
        self.horizontalLayout_30.addWidget(self.label_82)
        self.lineEdit_24 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_24.setObjectName("lineEdit_24")
        self.horizontalLayout_30.addWidget(self.lineEdit_24)
        self.verticalLayout_69.addLayout(self.horizontalLayout_30)
        self.horizontalLayout_36 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_36.setObjectName("horizontalLayout_36")
        self.label_99 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_99.setObjectName("label_99")
        self.horizontalLayout_36.addWidget(self.label_99)
        self.dateEdit_14 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_14.setObjectName("dateEdit_14")
        self.horizontalLayout_36.addWidget(self.dateEdit_14)
        self.timeEdit_14 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_14.setObjectName("timeEdit_14")
        self.horizontalLayout_36.addWidget(self.timeEdit_14)
        self.label_100 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_100.setObjectName("label_100")
        self.horizontalLayout_36.addWidget(self.label_100)
        self.lineEdit_28 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_28.setObjectName("lineEdit_28")
        self.horizontalLayout_36.addWidget(self.lineEdit_28)
        self.label_104 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_104.setObjectName("label_104")
        self.horizontalLayout_36.addWidget(self.label_104)
        self.lineEdit_29 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_29.setObjectName("lineEdit_29")
        self.horizontalLayout_36.addWidget(self.lineEdit_29)
        self.verticalLayout_69.addLayout(self.horizontalLayout_36)
        self.horizontalLayout_40 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_40.setObjectName("horizontalLayout_40")
        self.label_110 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_110.setObjectName("label_110")
        self.horizontalLayout_40.addWidget(self.label_110)
        self.dateEdit_15 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_15.setObjectName("dateEdit_15")
        self.horizontalLayout_40.addWidget(self.dateEdit_15)
        self.timeEdit_15 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_15.setObjectName("timeEdit_15")
        self.horizontalLayout_40.addWidget(self.timeEdit_15)
        self.label_111 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_111.setObjectName("label_111")
        self.horizontalLayout_40.addWidget(self.label_111)
        self.lineEdit_30 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_30.setObjectName("lineEdit_30")
        self.horizontalLayout_40.addWidget(self.lineEdit_30)
        self.label_112 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_112.setObjectName("label_112")
        self.horizontalLayout_40.addWidget(self.label_112)
        self.lineEdit_31 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_31.setObjectName("lineEdit_31")
        self.horizontalLayout_40.addWidget(self.lineEdit_31)
        self.verticalLayout_69.addLayout(self.horizontalLayout_40)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        self.label_92 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_92.setObjectName("label_92")
        self.horizontalLayout_34.addWidget(self.label_92)
        self.dateEdit_16 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_16.setObjectName("dateEdit_16")
        self.horizontalLayout_34.addWidget(self.dateEdit_16)
        self.timeEdit_16 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_16.setObjectName("timeEdit_16")
        self.horizontalLayout_34.addWidget(self.timeEdit_16)
        self.label_93 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_93.setObjectName("label_93")
        self.horizontalLayout_34.addWidget(self.label_93)
        self.lineEdit_32 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_32.setObjectName("lineEdit_32")
        self.horizontalLayout_34.addWidget(self.lineEdit_32)
        self.label_94 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_94.setObjectName("label_94")
        self.horizontalLayout_34.addWidget(self.label_94)
        self.lineEdit_33 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_33.setObjectName("lineEdit_33")
        self.horizontalLayout_34.addWidget(self.lineEdit_33)
        self.verticalLayout_69.addLayout(self.horizontalLayout_34)
        self.horizontalLayout_41 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_41.setObjectName("horizontalLayout_41")
        self.label_114 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_114.setObjectName("label_114")
        self.horizontalLayout_41.addWidget(self.label_114)
        self.dateEdit_18 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_18.setObjectName("dateEdit_18")
        self.horizontalLayout_41.addWidget(self.dateEdit_18)
        self.timeEdit_18 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_18.setObjectName("timeEdit_18")
        self.horizontalLayout_41.addWidget(self.timeEdit_18)
        self.label_115 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_115.setObjectName("label_115")
        self.horizontalLayout_41.addWidget(self.label_115)
        self.lineEdit_38 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_38.setObjectName("lineEdit_38")
        self.horizontalLayout_41.addWidget(self.lineEdit_38)
        self.label_116 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_116.setObjectName("label_116")
        self.horizontalLayout_41.addWidget(self.label_116)
        self.lineEdit_39 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_39.setObjectName("lineEdit_39")
        self.horizontalLayout_41.addWidget(self.lineEdit_39)
        self.verticalLayout_69.addLayout(self.horizontalLayout_41)
        self.horizontalLayout_43 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_43.setObjectName("horizontalLayout_43")
        self.label_120 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_120.setObjectName("label_120")
        self.horizontalLayout_43.addWidget(self.label_120)
        self.dateEdit_21 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_21.setObjectName("dateEdit_21")
        self.horizontalLayout_43.addWidget(self.dateEdit_21)
        self.timeEdit_21 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_21.setObjectName("timeEdit_21")
        self.horizontalLayout_43.addWidget(self.timeEdit_21)
        self.label_121 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_121.setObjectName("label_121")
        self.horizontalLayout_43.addWidget(self.label_121)
        self.lineEdit_42 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_42.setObjectName("lineEdit_42")
        self.horizontalLayout_43.addWidget(self.lineEdit_42)
        self.label_122 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_122.setObjectName("label_122")
        self.horizontalLayout_43.addWidget(self.label_122)
        self.lineEdit_43 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_43.setObjectName("lineEdit_43")
        self.horizontalLayout_43.addWidget(self.lineEdit_43)
        self.verticalLayout_69.addLayout(self.horizontalLayout_43)
        self.horizontalLayout_44 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_44.setObjectName("horizontalLayout_44")
        self.label_123 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_123.setObjectName("label_123")
        self.horizontalLayout_44.addWidget(self.label_123)
        self.dateEdit_22 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_22.setObjectName("dateEdit_22")
        self.horizontalLayout_44.addWidget(self.dateEdit_22)
        self.timeEdit_22 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_22.setObjectName("timeEdit_22")
        self.horizontalLayout_44.addWidget(self.timeEdit_22)
        self.label_124 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_124.setObjectName("label_124")
        self.horizontalLayout_44.addWidget(self.label_124)
        self.lineEdit_44 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_44.setObjectName("lineEdit_44")
        self.horizontalLayout_44.addWidget(self.lineEdit_44)
        self.label_125 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_125.setObjectName("label_125")
        self.horizontalLayout_44.addWidget(self.label_125)
        self.lineEdit_45 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_45.setObjectName("lineEdit_45")
        self.horizontalLayout_44.addWidget(self.lineEdit_45)
        self.verticalLayout_69.addLayout(self.horizontalLayout_44)
        self.horizontalLayout_45 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_45.setObjectName("horizontalLayout_45")
        self.label_126 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_126.setObjectName("label_126")
        self.horizontalLayout_45.addWidget(self.label_126)
        self.dateEdit_23 = QtWidgets.QDateEdit(self.scrollAreaWidgetContents)
        self.dateEdit_23.setObjectName("dateEdit_23")
        self.horizontalLayout_45.addWidget(self.dateEdit_23)
        self.timeEdit_23 = QtWidgets.QTimeEdit(self.scrollAreaWidgetContents)
        self.timeEdit_23.setObjectName("timeEdit_23")
        self.horizontalLayout_45.addWidget(self.timeEdit_23)
        self.label_127 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_127.setObjectName("label_127")
        self.horizontalLayout_45.addWidget(self.label_127)
        self.lineEdit_46 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_46.setObjectName("lineEdit_46")
        self.horizontalLayout_45.addWidget(self.lineEdit_46)
        self.label_128 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_128.setObjectName("label_128")
        self.horizontalLayout_45.addWidget(self.label_128)
        self.lineEdit_47 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.lineEdit_47.setObjectName("lineEdit_47")
        self.horizontalLayout_45.addWidget(self.lineEdit_47)
        self.verticalLayout_69.addLayout(self.horizontalLayout_45)
        
       
        

        self.DeleteBtn = QtWidgets.QPushButton(self.tab)
        self.DeleteBtn.setGeometry(QtCore.QRect(1070,245,235,61))
        self.DeleteBtn.setObjectName("DeleteBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(50)
        self.DeleteBtn.setFont(font)
        
        self.label_41 = QtWidgets.QLabel(self.tab)
        self.label_41.setGeometry(QtCore.QRect(1070, 325, 200, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_41.setFont(font)
        self.label_41.setObjectName("label_41")
        
        self.label_42 = QtWidgets.QLabel(self.tab)
        self.label_42.setGeometry(QtCore.QRect(1070, 487, 200, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_42.setFont(font)
        self.label_42.setObjectName("label_42")
        
        self.lineEdit_48 = QtWidgets.QLineEdit(self.tab)
        self.lineEdit_48.setGeometry(QtCore.QRect(1070, 365, 110, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_48.setFont(font)
        #self.lineEdit_48.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_48.setObjectName("lineEdit_48")
        
        self.lineEdit_49 = QtWidgets.QLineEdit(self.tab)
        self.lineEdit_49.setGeometry(QtCore.QRect(1070, 527, 110, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_49.setFont(font)
        #self.lineEdit_48.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_49.setObjectName("lineEdit_49")
        
        self.StirOnBtn = QtWidgets.QPushButton(self.tab)
        #self.StirOnBtn.setGeometry(QtCore.QRect(1070,335,235,61))
        self.StirOnBtn.setGeometry(QtCore.QRect(1070,408,110,61))
        self.StirOnBtn.setObjectName("StirOnBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(50)
        self.StirOnBtn.setFont(font)
        

        self.StirOffBtn = QtWidgets.QPushButton(self.tab)
        self.StirOffBtn.setGeometry(QtCore.QRect(1195,408,110,61))
        self.StirOffBtn.setObjectName("StirOffBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(50)
        self.StirOffBtn.setFont(font)
        
        self.FillOnBtn = QtWidgets.QPushButton(self.tab)
        self.FillOnBtn.setGeometry(QtCore.QRect(1070,570,110,61))
        self.FillOnBtn.setObjectName("FillOnBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(50)
        self.FillOnBtn.setFont(font)
        
        self.FillOffBtn = QtWidgets.QPushButton(self.tab)
        self.FillOffBtn.setGeometry(QtCore.QRect(1195,570,110,61))
        self.FillOffBtn.setObjectName("FillOffBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(50)
        self.FillOffBtn.setFont(font)
        
        
        self.Ox1ChkBtn = QtWidgets.QPushButton(self.tab)
        self.Ox1ChkBtn.setGeometry(QtCore.QRect(589,97,90,70))
        self.Ox1ChkBtn.setObjectName("Ox1ChkBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(70)
        self.Ox1ChkBtn.setFont(font)
        
        self.FluxChkBtn = QtWidgets.QPushButton(self.tab)
        self.FluxChkBtn.setGeometry(QtCore.QRect(787,97,90,70))
        self.FluxChkBtn.setObjectName("FluxChkBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(70)
        self.FluxChkBtn.setFont(font)
        
        self.Ox2ChkBtn = QtWidgets.QPushButton(self.tab)
        self.Ox2ChkBtn.setGeometry(QtCore.QRect(690,97,90,70))
        self.Ox2ChkBtn.setObjectName("Ox2ChkBtn")
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(70)
        self.Ox2ChkBtn.setFont(font)
        

 
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_4.setGeometry(QtCore.QRect(580, 180, 181, 461))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setTitle("")
        self.groupBox_4.setObjectName("groupBox_4")
        self.verticalLayoutWidget_12 = QtWidgets.QWidget(self.groupBox_4)
        self.verticalLayoutWidget_12.setGeometry(QtCore.QRect(10, 220, 160, 73))
        self.verticalLayoutWidget_12.setObjectName("verticalLayoutWidget_12")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_12)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_28 = QtWidgets.QLabel(self.verticalLayoutWidget_12)
        self.label_28.setObjectName("label_28")
        self.verticalLayout_12.addWidget(self.label_28)
        self.lineEdit_25 = QtWidgets.QLineEdit(self.verticalLayoutWidget_12)
        self.lineEdit_25.setObjectName("lineEdit_25")
        self.verticalLayout_12.addWidget(self.lineEdit_25)
        #self.label_7 = QtWidgets.QLabel(self.verticalLayoutWidget_12)
        #self.label_7.setObjectName("label_7")
        #self.verticalLayout_12.addWidget(self.label_7)
        #self.lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_12)
        #self.lineEdit.setObjectName("lineEdit")
        #self.verticalLayout_12.addWidget(self.lineEdit)
        self.CheckBtn_1 = QtWidgets.QPushButton(self.verticalLayoutWidget_12)
        self.CheckBtn_1.setObjectName("CheckBtn_1")
        self.verticalLayout_12.addWidget(self.CheckBtn_1)
        self.verticalLayoutWidget_13 = QtWidgets.QWidget(self.groupBox_4)
        self.verticalLayoutWidget_13.setGeometry(QtCore.QRect(10, 300, 160, 73))
        self.verticalLayoutWidget_13.setObjectName("verticalLayoutWidget_13")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_13)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.label_29 = QtWidgets.QLabel(self.verticalLayoutWidget_13)
        self.label_29.setObjectName("label_29")
        self.verticalLayout_13.addWidget(self.label_29)
        self.lineEdit_26 = QtWidgets.QLineEdit(self.verticalLayoutWidget_13)
        self.lineEdit_26.setObjectName("lineEdit_26")
        self.verticalLayout_13.addWidget(self.lineEdit_26)
        self.CheckBtn_2 = QtWidgets.QPushButton(self.verticalLayoutWidget_13)
        self.CheckBtn_2.setObjectName("CheckBtn_2")
        self.verticalLayout_13.addWidget(self.CheckBtn_2)
        self.verticalLayoutWidget_14 = QtWidgets.QWidget(self.groupBox_4)
        self.verticalLayoutWidget_14.setGeometry(QtCore.QRect(10, 0, 160, 98))
        self.verticalLayoutWidget_14.setObjectName("verticalLayoutWidget_14")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_14)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.label_30 = QtWidgets.QLabel(self.verticalLayoutWidget_14)
        self.label_30.setObjectName("label_30")
        self.verticalLayout_14.addWidget(self.label_30)
        self.comboBox_4 = QtWidgets.QComboBox(self.verticalLayoutWidget_14)
        self.comboBox_4.setObjectName("comboBox_4")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.comboBox_4.addItem("")
        self.verticalLayout_14.addWidget(self.comboBox_4)
        self.CheckBtn_3 = QtWidgets.QPushButton(self.verticalLayoutWidget_14)
        self.CheckBtn_3.setObjectName("CheckBtn_3")
        self.verticalLayout_14.addWidget(self.CheckBtn_3)
        self.CheckBtn_4 = QtWidgets.QPushButton(self.groupBox_4)
        self.CheckBtn_4.setGeometry(QtCore.QRect(100, 380, 71, 23))
        self.CheckBtn_4.setObjectName("CheckBtn_4")
        self.verticalLayoutWidget_34 = QtWidgets.QWidget(self.groupBox_4)
        self.verticalLayoutWidget_34.setGeometry(QtCore.QRect(10, 103, 160, 111))
        self.verticalLayoutWidget_34.setObjectName("verticalLayoutWidget_34")
        self.verticalLayout_34 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_34)
        self.verticalLayout_34.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_34.setObjectName("verticalLayout_34")
        self.label_98 = QtWidgets.QLabel(self.verticalLayoutWidget_34)
        self.label_98.setObjectName("label_98")
        self.verticalLayout_34.addWidget(self.label_98)
        self.dateEdit_17 = QtWidgets.QDateEdit(self.verticalLayoutWidget_34)
        self.dateEdit_17.setObjectName("dateEdit_17")
        self.verticalLayout_34.addWidget(self.dateEdit_17)
        self.timeEdit_17 = QtWidgets.QTimeEdit(self.verticalLayoutWidget_34)
        self.timeEdit_17.setObjectName("timeEdit_17")
        self.verticalLayout_34.addWidget(self.timeEdit_17)
        self.CheckBtn_5 = QtWidgets.QPushButton(self.verticalLayoutWidget_34)
        self.CheckBtn_5.setObjectName("CheckBtn_5")
        self.verticalLayout_34.addWidget(self.CheckBtn_5)
        self.scrollArea_2 = QtWidgets.QScrollArea(self.tab)
        self.scrollArea_2.setGeometry(QtCore.QRect(770, 180, 281, 461))
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 249, 459))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.listWidget = QtWidgets.QListWidget(self.scrollAreaWidgetContents_2)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.listWidget.setFont(font)
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout.addWidget(self.listWidget)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(890, 10, 160, 161))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.GetGraphBtn = QtWidgets.QPushButton(self.groupBox)
        self.GetGraphBtn.setGeometry(QtCore.QRect(5, 45, 151, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.GetGraphBtn.setFont(font)
        self.GetGraphBtn.setObjectName("GetGraphBtn")
        self.GraphOxBtn = QtWidgets.QPushButton(self.groupBox)
        self.GraphOxBtn.setGeometry(QtCore.QRect(5, 85, 71, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.GraphOxBtn.setFont(font)
        self.GraphOxBtn.setObjectName("GraphOxBtn")
        self.GraphTempBtn = QtWidgets.QPushButton(self.groupBox)
        self.GraphTempBtn.setGeometry(QtCore.QRect(85, 85, 71, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.GraphTempBtn.setFont(font)
        self.GraphTempBtn.setObjectName("GraphTempBtn")
        self.GraphClearBtn = QtWidgets.QPushButton(self.groupBox)
        self.GraphClearBtn.setGeometry(QtCore.QRect(5, 125, 151, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.GraphClearBtn.setFont(font)
        self.GraphClearBtn.setObjectName("GraphClearBtn")
        
        self.SaveFileBtn = QtWidgets.QPushButton(self.tab)
        self.SaveFileBtn.setGeometry(QtCore.QRect(1070, 170, 235, 61))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(50)
        self.SaveFileBtn.setFont(font)
        self.SaveFileBtn.setObjectName("SaveFileBtn")
        self.GetLogFileNameBtn = QtWidgets.QPushButton(self.tab)
        self.GetLogFileNameBtn.setGeometry(QtCore.QRect(1070, 20, 235, 61))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(50)
        self.GetLogFileNameBtn.setFont(font)
        self.GetLogFileNameBtn.setObjectName("GetLogFileNameBtn")
        self.SetLogFilePathBtn = QtWidgets.QPushButton(self.tab)
        self.SetLogFilePathBtn.setGeometry(QtCore.QRect(1070, 95, 235, 61))
        
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(50)
        self.SetLogFilePathBtn.setFont(font)
        self.SetLogFilePathBtn.setObjectName("SetLogFilePathBtn")
        self.DevideCycleBtn = QtWidgets.QPushButton(self.groupBox)
        self.DevideCycleBtn.setGeometry(QtCore.QRect(5, 5, 151, 31))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.DevideCycleBtn.setFont(font)
        self.DevideCycleBtn.setObjectName("DevideCycleBtn")
        self.SerialSettingBtn = QtWidgets.QPushButton(self.tab)
        self.SerialSettingBtn.setGeometry(QtCore.QRect(589, 15, 90, 66))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.SerialSettingBtn.setFont(font)
        self.SerialSettingBtn.setObjectName("SerialSettingBtn")
        self.ConnectCPUBtn = QtWidgets.QPushButton(self.tab)
        self.ConnectCPUBtn.setGeometry(QtCore.QRect(787, 15, 90, 66))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.ConnectCPUBtn.setFont(font)
        self.ConnectCPUBtn.setObjectName("ConnectCPUBtn")
        self.SerialSetCheckBtn = QtWidgets.QPushButton(self.tab)
        self.SerialSetCheckBtn.setGeometry(QtCore.QRect(690, 15, 90, 66))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.SerialSetCheckBtn.setFont(font)
        self.SerialSetCheckBtn.setObjectName("SerialSetCheckBtn")
        self.line_2 = QtWidgets.QFrame(self.tab)
        self.line_2.setGeometry(QtCore.QRect(0, 633, 1322, 21))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_2.setLineWidth(5)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setObjectName("line_2")
        self.line_3 = QtWidgets.QFrame(self.tab)
        self.line_3.setGeometry(QtCore.QRect(-23, 5, 51, 641))
        self.line_3.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_3.setLineWidth(5)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setObjectName("line_3")
        self.line = QtWidgets.QFrame(self.tab)
        self.line.setGeometry(QtCore.QRect(0, -5, 1324, 21))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(5)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.line_4 = QtWidgets.QFrame(self.tab)
        self.line_4.setGeometry(QtCore.QRect(1030, 5, 51, 641))
        self.line_4.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_4.setLineWidth(5)
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setObjectName("line_4")
        
        self.line_13 = QtWidgets.QFrame(self.tab)
        self.line_13.setGeometry(QtCore.QRect(859, 5, 51, 170))
        self.line_13.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_13.setLineWidth(5)
        self.line_13.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_13.setObjectName("line_13")
        
        
        self.line_10 = QtWidgets.QFrame(self.tab)
        self.line_10.setGeometry(QtCore.QRect(1296, 5, 51, 641))
        self.line_10.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_10.setLineWidth(5)
        self.line_10.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_10.setObjectName("line_10")
        
        self.line_5 = QtWidgets.QFrame(self.tab)
        self.line_5.setGeometry(QtCore.QRect(570, 5, 21, 641))
        self.line_5.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_5.setLineWidth(5)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setObjectName("line_5")
        
        self.line_11 = QtWidgets.QFrame(self.tab)
        self.line_11.setGeometry(QtCore.QRect(1055, 310, 265, 21))
        self.line_11.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_11.setLineWidth(5)
        self.line_11.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_11.setObjectName("line_11")
        
        self.line_14 = QtWidgets.QFrame(self.tab)
        self.line_14.setGeometry(QtCore.QRect(1055, 470, 265, 21))
        self.line_14.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_14.setLineWidth(5)
        self.line_14.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_14.setObjectName("line_14")
        
        self.line_6 = QtWidgets.QFrame(self.tab)
        self.line_6.setGeometry(QtCore.QRect(580, 166, 473, 21))
        self.line_6.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_6.setLineWidth(5)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setObjectName("line_6")
        
        self.line_12 = QtWidgets.QFrame(self.tab)
        self.line_12.setGeometry(QtCore.QRect(580, 78, 305, 21))
        self.line_12.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_12.setLineWidth(5)
        self.line_12.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_12.setObjectName("line_12")
        
        self.line_7 = QtWidgets.QFrame(self.tab)
        self.line_7.setGeometry(QtCore.QRect(740, 175, 51, 466))
        self.line_7.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line_7.setLineWidth(5)
        self.line_7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_7.setObjectName("line_7")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.widget = PlotWidget(self.tab_2)
        self.widget.setGeometry(QtCore.QRect(0, 0, 991, 601))
        self.widget.setObjectName("widget")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # 디지털 시계
        self.timer = QtCore.QTimer(MainWindow)
        self.timer.timeout.connect(self.time_out)

        
                
        
        
        self.timer.start(1000)

        # 시리얼 연결 변수
        self.ser_checking_num = 0
##        self.th_number = 1

        # 버튼클릭 함수
        self.DeleteBtn.clicked.connect(self.delete_file)
        self.StirOnBtn.clicked.connect(self.stir_on)
        self.StirOffBtn.clicked.connect(self.stir_off)
        self.FillOnBtn.clicked.connect(self.fill_on)
        self.FillOffBtn.clicked.connect(self.fill_off)
        self.Ox1ChkBtn.clicked.connect(self.Oxcheck)
        self.FluxChkBtn.clicked.connect(self.Fxcheck)
        self.Ox2ChkBtn.clicked.connect(self.Oxcheck2)
        
   
        
        self.CheckBtn_1.clicked.connect(self.full_dealy_time_minute)
        self.CheckBtn_2.clicked.connect(self.full_pump)
        self.CheckBtn_3.clicked.connect(self.full_count)
        self.CheckBtn_4.clicked.connect(self.full_save)
        self.CheckBtn_5.clicked.connect(self.full_time)
        self.DelayPumpmlResetBtn.clicked.connect(self.cycle_clear)
        self.SaveCycleBtn.clicked.connect(self.save_cycle)
        self.SaveFileBtn.clicked.connect(self.th)
        self.GetGraphBtn.clicked.connect(self.release_graph)
        self.GraphTempBtn.clicked.connect(self.release_temp)
        self.GraphOxBtn.clicked.connect(self.release_oxyzen)
        self.GraphClearBtn.clicked.connect(self.update_clear)
        self.ConnectCPUBtn.clicked.connect(self.transfer_start)
        self.SerialSettingBtn.clicked.connect(self.serialport_window)
        self.SerialSetCheckBtn.clicked.connect(self.serial_test_2)
        self.GetLogFileNameBtn.clicked.connect(self.check_text_transfer)
        self.SetLogFilePathBtn.clicked.connect(self.fileopen)
        self.DevideCycleBtn.clicked.connect(self.divide_text_file)

        # 현재시간 맞추기
        now = QDate.currentDate()

        self.dateEdit_1.setDate(now)
        self.dateEdit_2.setDate(now)
        self.dateEdit_3.setDate(now)
        self.dateEdit_4.setDate(now)
        self.dateEdit_5.setDate(now)
        self.dateEdit_6.setDate(now)
        self.dateEdit_8.setDate(now)
        self.dateEdit_19.setDate(now)
        self.dateEdit_9.setDate(now)
        self.dateEdit_10.setDate(now)
        self.dateEdit_11.setDate(now)
        self.dateEdit_12.setDate(now)
        self.dateEdit_13.setDate(now)
        self.dateEdit_14.setDate(now)
        self.dateEdit_15.setDate(now)
        self.dateEdit_16.setDate(now)
        self.dateEdit_17.setDate(now)
        self.dateEdit_18.setDate(now)
        self.dateEdit_21.setDate(now)
        self.dateEdit_22.setDate(now)
        self.dateEdit_23.setDate(now)

        # 사진
        self.pixmap = QPixmap('./Display/kiost.png')
        self.label_3.setPixmap(QPixmap(self.pixmap))

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 그래프
        self.widget.setBackground('w')
        self.widget.addLegend(offset = (820,5))
        styles = {'font-size':'12px'}
        self.widget.setLabel('right','Temperature',**styles)
        self.widget.setLabel('left','Oxyzen Value',**styles)
        self.widget.setLabel('bottom','Seconds(10sec)',**styles)
        self.widget.showGrid(x=True)
        self.p2 = pg.ViewBox()
        self.widget.scene().addItem(self.p2)
        self.widget.getAxis('right').linkToView(self.p2)
        self.p2.setXLink(self.widget)
        self.p2.setYRange(10,25)
        self.widget.clear()
        self.p2.clear()

        self.curve = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#ff0000',width = 2), name="S1")
        self.curve_1 = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#0000ff',width = 2) ,name="S2")
        
        self.curve2 = pg.ScatterPlotItem(pen=pg.mkPen(color='#ff0000') ,name="hi")
        self.curve2_1 = pg.ScatterPlotItem(pen=pg.mkPen(color='#0000ff') ,name="hi")

        self.check_variable = "None"

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Respiration Chamber"))
        self.label_8.setText(_translate("MainWindow", "2001-01-01 00:00:00 월요일"))
        self.label_4.setText(_translate("MainWindow", "Cycle"))
        self.DeleteBtn.setText(_translate("MainWindow", "Log 파일 삭제"))
        self.StirOnBtn.setText(_translate("MainWindow","Stir 펌프 켜기"))
        self.StirOffBtn.setText(_translate("MainWindow","Stir 펌프 끄기"))
        self.FillOnBtn.setText(_translate("MainWindow","Fill 펌프 켜기"))
        self.FillOffBtn.setText(_translate("MainWindow","Fill 펌프 끄기"))
        self.Ox1ChkBtn.setText(_translate("MainWindow","Ox 센서1\n확인"))     
        self.FluxChkBtn.setText(_translate("MainWindow","Light센서\n확인"))
        self.Ox2ChkBtn.setText(_translate("MainWindow","Ox 센서2\n확인"))

        self.DelayPumpmlResetBtn.setText(_translate("MainWindow", "초기화"))
        self.label_41.setText(_translate("MainWindow", "Stir PWM설정(%)"))
        self.label_42.setText(_translate("MainWindow", "Fill PWM설정(%)"))
        self.SaveCycleBtn.setText(_translate("MainWindow", "저장"))
        self.label_62.setText(_translate("MainWindow", "Cycle 1 "))
        self.label_63.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_64.setText(_translate("MainWindow", "Stir PWM "))
        self.label_56.setText(_translate("MainWindow", "Cycle 2 "))
        self.label_59.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_58.setText(_translate("MainWindow", "Stir PWM "))
        self.label_89.setText(_translate("MainWindow", "Cycle 3 "))
        self.label_90.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_91.setText(_translate("MainWindow", "Stir PWM "))
        self.label_68.setText(_translate("MainWindow", "Cycle 4 "))
        self.label_69.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_70.setText(_translate("MainWindow", "Stir PWM "))
        self.label_86.setText(_translate("MainWindow", "Cycle 5 "))
        self.label_87.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_88.setText(_translate("MainWindow", "Stir PWM "))
        self.label_77.setText(_translate("MainWindow", "Cycle 6 "))
        self.label_78.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_79.setText(_translate("MainWindow", "Stir PWM "))
        self.label_71.setText(_translate("MainWindow", "Cycle 7 "))
        self.label_72.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_73.setText(_translate("MainWindow", "Stir PWM "))
        self.label_105.setText(_translate("MainWindow", "Cycle 8 "))
        self.label_106.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_113.setText(_translate("MainWindow", "Stir PWM "))
        self.label_74.setText(_translate("MainWindow", "Cycle 9 "))
        self.label_75.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_76.setText(_translate("MainWindow", "Stir PWM "))
        self.label_5.setText(_translate("MainWindow", "-------------------------------------------------------------------------------------------------------"))
        self.label_95.setText(_translate("MainWindow", "Cycle 10"))
        self.label_96.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_97.setText(_translate("MainWindow", "Stir PWM "))
        self.label_101.setText(_translate("MainWindow", "Cycle 11"))
        self.label_102.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_103.setText(_translate("MainWindow", "Stir PWM "))
        self.label_107.setText(_translate("MainWindow", "Cycle 12"))
        self.label_108.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_109.setText(_translate("MainWindow", "Stir PWM "))
        self.label_80.setText(_translate("MainWindow", "Cycle 13"))
        self.label_81.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_82.setText(_translate("MainWindow", "Stir PWM "))
        self.label_99.setText(_translate("MainWindow", "Cycle 14"))
        self.label_100.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_104.setText(_translate("MainWindow", "Stir PWM "))
        self.label_110.setText(_translate("MainWindow", "Cycle 15"))
        self.label_111.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_112.setText(_translate("MainWindow", "Stir PWM "))
        self.label_92.setText(_translate("MainWindow", "Cycle 16"))
        self.label_93.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_94.setText(_translate("MainWindow", "Stir PWM "))
        self.label_114.setText(_translate("MainWindow", "Cycle 17"))
        self.label_115.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_116.setText(_translate("MainWindow", "Stir PWM "))
        self.label_120.setText(_translate("MainWindow", "Cycle 18"))
        self.label_121.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_122.setText(_translate("MainWindow", "Stir PWM "))
        self.label_123.setText(_translate("MainWindow", "Cycle 19"))
        self.label_124.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_125.setText(_translate("MainWindow", "Stir PWM "))
        self.label_126.setText(_translate("MainWindow", "Cycle 20"))
        self.label_127.setText(_translate("MainWindow", "CycleTermMinute"))
        self.label_128.setText(_translate("MainWindow", "Stir PWM "))
        self.label_28.setText(_translate("MainWindow", "Cycle Term Minute"))
        #self.label_7.setText(_translate("MainWindow", "Stir PWM"))
        self.CheckBtn_1.setText(_translate("MainWindow", "확인"))
        self.label_29.setText(_translate("MainWindow", "Stir Pump PWM"))
        self.CheckBtn_2.setText(_translate("MainWindow", "확인"))
        self.label_30.setText(_translate("MainWindow", "Full Cyclecount"))
        self.comboBox_4.setItemText(0, _translate("MainWindow", "1"))
        self.comboBox_4.setItemText(1, _translate("MainWindow", "2"))
        self.comboBox_4.setItemText(2, _translate("MainWindow", "3"))
        self.comboBox_4.setItemText(3, _translate("MainWindow", "4"))
        self.comboBox_4.setItemText(4, _translate("MainWindow", "5"))
        self.comboBox_4.setItemText(5, _translate("MainWindow", "6"))
        self.comboBox_4.setItemText(6, _translate("MainWindow", "7"))
        self.comboBox_4.setItemText(7, _translate("MainWindow", "8"))
        self.comboBox_4.setItemText(8, _translate("MainWindow", "9"))
        self.comboBox_4.setItemText(9, _translate("MainWindow", "10"))
        self.comboBox_4.setItemText(10, _translate("MainWindow", "11"))
        self.comboBox_4.setItemText(11, _translate("MainWindow", "12"))
        self.comboBox_4.setItemText(12, _translate("MainWindow", "13"))
        self.comboBox_4.setItemText(13, _translate("MainWindow", "14"))
        self.comboBox_4.setItemText(14, _translate("MainWindow", "15"))
        self.comboBox_4.setItemText(15, _translate("MainWindow", "16"))
        self.comboBox_4.setItemText(16, _translate("MainWindow", "17"))
        self.comboBox_4.setItemText(17, _translate("MainWindow", "18"))
        self.comboBox_4.setItemText(18, _translate("MainWindow", "19"))
        self.comboBox_4.setItemText(19, _translate("MainWindow", "20"))
        self.CheckBtn_3.setText(_translate("MainWindow", "확인"))
        self.CheckBtn_4.setText(_translate("MainWindow", "저장"))
        self.label_98.setText(_translate("MainWindow", "First Srart time"))
        self.CheckBtn_5.setText(_translate("MainWindow", "확인"))
        self.GetGraphBtn.setText(_translate("MainWindow", "그래프 출력"))
        self.GraphOxBtn.setText(_translate("MainWindow", "산소"))
        self.GraphTempBtn.setText(_translate("MainWindow", "온도"))
        self.GraphClearBtn.setText(_translate("MainWindow", "초기화"))
        self.SaveFileBtn.setText(_translate("MainWindow", "파일 다운로드"))
        self.GetLogFileNameBtn.setText(_translate("MainWindow", "파일 이름 확인"))
        self.SetLogFilePathBtn.setText(_translate("MainWindow", "파일 경로 설정"))
        self.DevideCycleBtn.setText(_translate("MainWindow", "CYCLE 나누기"))
        self.SerialSettingBtn.setText(_translate("MainWindow", "시리얼 통신\n설정"))
        self.ConnectCPUBtn.setText(_translate("MainWindow", "시리얼 통신\n연결"))
        self.SerialSetCheckBtn.setText(_translate("MainWindow", "시리얼 통신\n확인"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
    # 시계 함수
    def time_out(self):
        currentTime = QDateTime.currentDateTime()
        timeDisplay = currentTime.toString('yyyy-MM-dd hh:mm:ss dddd')
        self.label_8.setText(timeDisplay)


        

    def stir_on(self):
        try:
            self.ser.write("StirOn\n".encode())
            time.sleep(0.1)
            #print(self.lineEdit_48.text())
            self.motor_control_value = "PWM"+self.lineEdit_48.text()
            self.ser.write(self.motor_control_value.encode())
            
            now=QTime.currentTime()
            now=now.toString('hh:mm:ss')
            query = "["+now+"] Stir Motor On"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to stir on\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to stir on\n please check the value"
            self.listWidget.insertItem(0,query)
            
    def stir_off(self):
        try:
            self.ser.write("StirOff\n".encode())
            now=QTime.currentTime()
            now=now.toString('hh:mm:ss')
            query = "["+now+"] Stir Motor Off"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to stir off\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to stir off\n please check the value"
            self.listWidget.insertItem(0,query)
    def fill_on(self):
        try:
            self.ser.write("FillOn\n".encode())
            time.sleep(0.1)
            #print(self.lineEdit_48.text())
            self.motor_control_value = "PWM"+self.lineEdit_49.text()
            self.ser.write(self.motor_control_value.encode())
            
            now=QTime.currentTime()
            now=now.toString('hh:mm:ss')
            query = "["+now+"] Fill Motor On"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to fill on\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to fill on\n please check the value"
            self.listWidget.insertItem(0,query)
            
    def fill_off(self):
        try:
            self.ser.write("FillOff\n".encode())
            now=QTime.currentTime()
            now=now.toString('hh:mm:ss')
            query = "["+now+"] Fill Motor Off"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to fill off\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to fill off\n please check the value"
            self.listWidget.insertItem(0,query)
            
    def Oxcheck(self):
        try:
            self.ser.write("OxCheck\n".encode())
            cron=1
            while(cron):
            
                self.k_list = []
                self.k = self.ser.readline().decode('utf-8')
                self.k_list.append(self.k)
                for x in self.k_list:
                    if "N" in x:
                        now=QTime.currentTime()
                        now=now.toString('hh:mm:ss')
                      
                        data_inform_T = int(x.index('T'))
                        data_inform_O = int(x.index('O'))
                        
                        dT=x[data_inform_T+1:data_inform_T+5]
                        dO=x[data_inform_O+1:data_inform_O+7]
                        
                        
                        query = "["+now+"] T1: "+ str(float(int(dT)/100)) + "  O1: "+ str(float(int(dO)/100))
                        self.listWidget.insertItem(0,query)
                        cron=0
                        
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to check Ox\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to check Ox\n please check the value"
            self.listWidget.insertItem(0,query)
    

        
    
    def delete_file(self):
        try:
            txtname=self.listWidget.currentItem().text()
            deletetxt=txtname.split("-")[0]
            self.ser.write(("Delete\n").encode())
            print(deletetxt)
            
            #정말 삭제할꺼냐 물어보고 yes하면 txtname write 아니면 그냥 닫기
            self.msg.setIcon(QMessageBox.Information)
            self.msg.setWindowTitle('Delete Check')
            self.msg.setText('정말 삭제하시겠습니까?')
            self.msg.setStandardButtons(QMessageBox.Ok|QMessageBox.Cancel)
            retval=self.msg.exec_()
            
            if retval==QMessageBox.Ok:
                self.ser.write(deletetxt.encode())
                self.removeItemRow = self.listWidget.currentRow()
                self.listWidget.takeItem(self.removeItemRow)
                #listwidget삭제
                
            else:
                self.ser.write("no\n".encode())

            
            #time.sleep(3)
            #self.ser.write(txtname.encode())
            #self.filename = QFileDialog.getSaveFileName(MainWindow, 'Save file', './'+txtname)
        except AttributeError:
            pass
            #self.filename = QFileDialog.getSaveFileName(MainWindow, 'Save file', './')
    
    
    def Fxcheck(self):
        try:
            self.ser.write("FxCheck\n".encode())       
            cron=1
            while(cron):
            
                self.k_list = []
                self.k = self.ser.readline().decode('utf-8')
                self.k_list.append(self.k)
                for x in self.k_list:
                    if "@T" in x:
                        now=QTime.currentTime()
                        now=now.toString('hh:mm:ss')
                        data_inform = x.split(',')
                        data_inform_2 = float(data_inform[2])
                        data_inform_1 = float(data_inform[4].strip())
                        query = "["+now+"] Lux: "+str(data_inform_1) + "  Temp: "+str(data_inform_2)
                        self.listWidget.insertItem(0,query)
                        cron=0
               
            
            
            
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to check Fx\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to check Fx\n please check the value"
            self.listWidget.insertItem(0,query)
    def Oxcheck2(self):
        try:
            self.ser.write("Ox2Check\n".encode())
            #now=QTime.currentTime()
            #now=now.toString('hh:mm:ss')
            #query = "["+now+"] Check Ox Sensor"
            #self.listWidget.insertItem(0,query)
            cron=1
            while(cron):
            
                self.k_list = []
                self.k = self.ser.readline().decode('utf-8')
                self.k_list.append(self.k)
                for x in self.k_list:
                    if "N" in x:
                        now=QTime.currentTime()
                        now=now.toString('hh:mm:ss')
                      
                        data_inform_T = int(x.index('T'))
                        data_inform_O = int(x.index('O'))
                        
                        dT=x[data_inform_T+1:data_inform_T+5]
                        dO=x[data_inform_O+1:data_inform_O+7]
                        
                        
                        query = "["+now+"] T2: "+ str(float(int(dT)/100)) + "  O2: "+ str(float(int(dO)/100))
                        self.listWidget.insertItem(0,query)
                        cron=0
                        
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to check Ox2\n please check the value"
            self.listWidget.insertItem(0,query)
        except FileNotFoundError and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to check Ox2\n please check the value"
            self.listWidget.insertItem(0,query)
    # 싸이클 저장 함수    
    def save_cycle(self): 
        Cycle1_d = self.dateEdit_1.date()
        Cycle1_date = Cycle1_d.toPyDate()
        Cycle1_t = self.timeEdit_1.time()
        Cycle1_time = Cycle1_t.toPyTime()
        Cycle1_term = self.lineEdit_1.text()
        Cycle1_pwm = self.lineEdit_2.text()
        ranglist[0][0] = Cycle1_date
        ranglist[0][1] = Cycle1_time
        ranglist[0][2] = Cycle1_term
        ranglist[0][3] = Cycle1_pwm

        Cycle2_d = self.dateEdit_2.date()
        Cycle2_date = Cycle2_d.toPyDate()
        Cycle2_t = self.timeEdit_2.time()
        Cycle2_time = Cycle2_t.toPyTime()
        Cycle2_term = self.lineEdit_3.text()
        Cycle2_pwm = self.lineEdit_4.text()
        ranglist[1][0] = Cycle2_date
        ranglist[1][1] = Cycle2_time
        ranglist[1][2] = Cycle2_term
        ranglist[1][3] = Cycle2_pwm

        Cycle3_d = self.dateEdit_3.date()
        Cycle3_date = Cycle3_d.toPyDate()
        Cycle3_t = self.timeEdit_3.time()
        Cycle3_time = Cycle3_t.toPyTime()
        Cycle3_term = self.lineEdit_5.text()
        Cycle3_pwm = self.lineEdit_6.text()
        ranglist[2][0] = Cycle3_date
        ranglist[2][1] = Cycle3_time
        ranglist[2][2] = Cycle3_term
        ranglist[2][3] = Cycle3_pwm

        Cycle4_d = self.dateEdit_4.date()
        Cycle4_date = Cycle4_d.toPyDate()
        Cycle4_t = self.timeEdit_4.time()
        Cycle4_time = Cycle4_t.toPyTime()
        Cycle4_term = self.lineEdit_7.text()
        Cycle4_pwm = self.lineEdit_8.text()
        ranglist[3][0] = Cycle4_date
        ranglist[3][1] = Cycle4_time
        ranglist[3][2] = Cycle4_term
        ranglist[3][3] = Cycle4_pwm

        Cycle5_d = self.dateEdit_5.date()
        Cycle5_date = Cycle5_d.toPyDate()
        Cycle5_t = self.timeEdit_5.time()
        Cycle5_time = Cycle5_t.toPyTime()
        Cycle5_term = self.lineEdit_9.text()
        Cycle5_pwm = self.lineEdit_10.text()
        ranglist[4][0] = Cycle5_date
        ranglist[4][1] = Cycle5_time
        ranglist[4][2] = Cycle5_term
        ranglist[4][3] = Cycle5_pwm

        Cycle6_d = self.dateEdit_6.date()
        Cycle6_date = Cycle6_d.toPyDate()
        Cycle6_t = self.timeEdit_6.time()
        Cycle6_time = Cycle6_t.toPyTime()
        Cycle6_term = self.lineEdit_11.text()
        Cycle6_pwm = self.lineEdit_12.text()
        ranglist[5][0] = Cycle6_date
        ranglist[5][1] = Cycle6_time
        ranglist[5][2] = Cycle6_term
        ranglist[5][3] = Cycle6_pwm

        Cycle7_d = self.dateEdit_8.date()
        Cycle7_date = Cycle7_d.toPyDate()
        Cycle7_t = self.timeEdit_8.time()
        Cycle7_time = Cycle7_t.toPyTime()
        Cycle7_term = self.lineEdit_13.text()
        Cycle7_pwm = self.lineEdit_14.text()
        ranglist[6][0] = Cycle7_date
        ranglist[6][1] = Cycle7_time
        ranglist[6][2] = Cycle7_term
        ranglist[6][3] = Cycle7_pwm

        Cycle8_d = self.dateEdit_19.date()
        Cycle8_date = Cycle8_d.toPyDate()
        Cycle8_t = self.timeEdit_19.time()
        Cycle8_time = Cycle8_t.toPyTime()
        Cycle8_term = self.lineEdit_36.text()
        Cycle8_pwm = self.lineEdit_37.text()
        ranglist[7][0] = Cycle8_date
        ranglist[7][1] = Cycle8_time
        ranglist[7][2] = Cycle8_term
        ranglist[7][3] = Cycle8_pwm

        Cycle9_d = self.dateEdit_9.date()
        Cycle9_date = Cycle9_d.toPyDate()
        Cycle9_t = self.timeEdit_9.time()
        Cycle9_time = Cycle9_t.toPyTime()
        Cycle9_term = self.lineEdit_15.text()
        Cycle9_pwm = self.lineEdit_16.text()
        ranglist[8][0] = Cycle9_date
        ranglist[8][1] = Cycle9_time
        ranglist[8][2] = Cycle9_term
        ranglist[8][3] = Cycle9_pwm

        Cycle10_d = self.dateEdit_10.date()
        Cycle10_date = Cycle10_d.toPyDate()
        Cycle10_t = self.timeEdit_10.time()
        Cycle10_time = Cycle10_t.toPyTime()
        Cycle10_term = self.lineEdit_17.text()
        Cycle10_pwm = self.lineEdit_18.text()
        ranglist[9][0] = Cycle10_date
        ranglist[9][1] = Cycle10_time
        ranglist[9][2] = Cycle10_term
        ranglist[9][3] = Cycle10_pwm

        Cycle11_d = self.dateEdit_11.date()
        Cycle11_date = Cycle11_d.toPyDate()
        Cycle11_t = self.timeEdit_11.time()
        Cycle11_time = Cycle11_t.toPyTime()
        Cycle11_term = self.lineEdit_19.text()
        Cycle11_pwm = self.lineEdit_20.text()
        ranglist[10][0] = Cycle11_date
        ranglist[10][1] = Cycle11_time
        ranglist[10][2] = Cycle11_term
        ranglist[10][3] = Cycle11_pwm

        Cycle12_d = self.dateEdit_12.date()
        Cycle12_date = Cycle12_d.toPyDate()
        Cycle12_t = self.timeEdit_12.time()
        Cycle12_time = Cycle12_t.toPyTime()
        Cycle12_term = self.lineEdit_21.text()
        Cycle12_pwm = self.lineEdit_22.text()
        ranglist[11][0] = Cycle12_date
        ranglist[11][1] = Cycle12_time
        ranglist[11][2] = Cycle12_term
        ranglist[11][3] = Cycle12_pwm

        Cycle13_d = self.dateEdit_13.date()
        Cycle13_date = Cycle13_d.toPyDate()
        Cycle13_t = self.timeEdit_13.time()
        Cycle13_time = Cycle13_t.toPyTime()
        Cycle13_term = self.lineEdit_23.text()
        Cycle13_pwm = self.lineEdit_24.text()
        ranglist[12][0] = Cycle13_date
        ranglist[12][1] = Cycle13_time
        ranglist[12][2] = Cycle13_term
        ranglist[12][3] = Cycle13_pwm

        Cycle14_d = self.dateEdit_14.date()
        Cycle14_date = Cycle14_d.toPyDate()
        Cycle14_t = self.timeEdit_14.time()
        Cycle14_time = Cycle14_t.toPyTime()
        Cycle14_term = self.lineEdit_28.text()
        Cycle14_pwm = self.lineEdit_29.text()
        ranglist[13][0] = Cycle14_date
        ranglist[13][1] = Cycle14_time
        ranglist[13][2] = Cycle14_term
        ranglist[13][3] = Cycle14_pwm

        Cycle15_d = self.dateEdit_15.date()
        Cycle15_date = Cycle15_d.toPyDate()
        Cycle15_t = self.timeEdit_15.time()
        Cycle15_time = Cycle15_t.toPyTime()
        Cycle15_term = self.lineEdit_30.text()
        Cycle15_pwm = self.lineEdit_31.text()
        ranglist[14][0] = Cycle15_date
        ranglist[14][1] = Cycle15_time
        ranglist[14][2] = Cycle15_term
        ranglist[14][3] = Cycle15_pwm

        Cycle16_d = self.dateEdit_16.date()
        Cycle16_date = Cycle16_d.toPyDate()
        Cycle16_t = self.timeEdit_16.time()
        Cycle16_time = Cycle16_t.toPyTime()
        Cycle16_term = self.lineEdit_32.text()
        Cycle16_pwm = self.lineEdit_33.text()
        ranglist[15][0] = Cycle16_date
        ranglist[15][1] = Cycle16_time
        ranglist[15][2] = Cycle16_term
        ranglist[15][3] = Cycle16_pwm

        Cycle17_d = self.dateEdit_18.date()
        Cycle17_date = Cycle17_d.toPyDate()
        Cycle17_t = self.timeEdit_18.time()
        Cycle17_time = Cycle17_t.toPyTime()
        Cycle17_term = self.lineEdit_38.text()
        Cycle17_pwm = self.lineEdit_39.text()
        ranglist[16][0] = Cycle17_date
        ranglist[16][1] = Cycle17_time
        ranglist[16][2] = Cycle17_term
        ranglist[16][3] = Cycle17_pwm

        Cycle18_d = self.dateEdit_21.date()
        Cycle18_date = Cycle18_d.toPyDate()
        Cycle18_t = self.timeEdit_21.time()
        Cycle18_time = Cycle18_t.toPyTime()
        Cycle18_term = self.lineEdit_42.text()
        Cycle18_pwm = self.lineEdit_43.text()
        ranglist[17][0] = Cycle18_date
        ranglist[17][1] = Cycle18_time
        ranglist[17][2] = Cycle18_term
        ranglist[17][3] = Cycle18_pwm

        Cycle19_d = self.dateEdit_22.date()
        Cycle19_date = Cycle19_d.toPyDate()
        Cycle19_t = self.timeEdit_22.time()
        Cycle19_time = Cycle19_t.toPyTime()
        Cycle19_term = self.lineEdit_44.text()
        Cycle19_pwm = self.lineEdit_45.text()
        ranglist[18][0] = Cycle19_date
        ranglist[18][1] = Cycle19_time
        ranglist[18][2] = Cycle19_term
        ranglist[18][3] = Cycle19_pwm

        Cycle20_d = self.dateEdit_23.date()
        Cycle20_date = Cycle20_d.toPyDate()
        Cycle20_t = self.timeEdit_23.time()
        Cycle20_time = Cycle20_t.toPyTime()
        Cycle20_term = self.lineEdit_46.text()
        Cycle20_pwm = self.lineEdit_47.text()
        ranglist[19][0] = Cycle20_date
        ranglist[19][1] = Cycle20_time
        ranglist[19][2] = Cycle20_term
        ranglist[19][3] = Cycle20_pwm

        lot=1
        pot = 0
        while(lot):
            if pot == 20:
                cyclecount = pot
                break;
            if ranglist[pot][3] == '' :
                cyclecount = pot
                lot = 0
                
            pot=pot+1
        #cyclecount=int(full_list[0])

        if (self.check_variable == "Check"):
            #delay_pump_ml = int(self.lineEdit_27.text())
            stir_pump_pwm = int(self.lineEdit_26.text())
            filename = 'config.txt'
            f = open(filename,"w")

            #f.write("Cycle "+str(cyclecount)+" Delay_pump_ml "+str(delay_pump_ml))
            f.write("Cycle "+str(cyclecount)+" Stir_pump_PWM "+str(stir_pump_pwm))
            f.write("\n")
            f.write("Cycle Start_time_Day Start_time_Hour Cycle_Term_Minute Stir_PWM\n")

            #self.ser.write(("Cycle "+str(cyclecount)+" Delay_pump_ml "+str(delay_pump_ml)).encode())
            #self.ser.write(" Cycle Start_time_Day Start_time_Hour Delay_time_Minute Pump_ml".encode())
            self.ser.write(("Cycle "+str(cyclecount)+" Stir_pump_PWM "+str(stir_pump_pwm)).encode())
            self.ser.write(" Cycle Start_time_Day Start_time_Hour Cycle_Term_Minute Stir_PWM".encode())
        

            for i in range(cyclecount):
                f.write(str(i+1))
                f.write(" ")
                for j in range(4):
                    f.write(str(ranglist[i][j]))
                    self.ser.write((" "+str(ranglist[i][j])).encode())
                    f.write(" ")
                f.write("\n")

            f.close()

        

            a = QMessageBox()
            a.setWindowTitle("KIOST")
            a.setText(" 저장 완료      ")
            a.exec_()

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Config.cfg 전송완료"
            self.listWidget.insertItem(0,query)

        else:
            a = QMessageBox()
            a.setWindowTitle("KIOST")
            a.setText("연결을 다시확인해주세요    ")
            a.exec_()

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Config.cfg 전송실패"
            self.listWidget.insertItem(0,query)
            
        
        
        
    # 초기화 함수      
    def cycle_clear(self):
        now = QDate.currentDate()

        self.dateEdit_1.setDate(now)
        self.dateEdit_2.setDate(now)
        self.dateEdit_3.setDate(now)
        self.dateEdit_4.setDate(now)
        self.dateEdit_5.setDate(now)
        self.dateEdit_6.setDate(now)
        self.dateEdit_8.setDate(now)
        self.dateEdit_19.setDate(now)
        self.dateEdit_9.setDate(now)
        self.dateEdit_10.setDate(now)
        self.dateEdit_11.setDate(now)
        self.dateEdit_12.setDate(now)
        self.dateEdit_13.setDate(now)
        self.dateEdit_14.setDate(now)
        self.dateEdit_15.setDate(now)
        self.dateEdit_16.setDate(now)
        self.dateEdit_18.setDate(now)
        self.dateEdit_21.setDate(now)
        self.dateEdit_22.setDate(now)
        self.dateEdit_23.setDate(now)

        
        clear_date = QDate(2000,1,1)
        clear_time = QTime(0,0,0)
        
        self.timeEdit_1.setTime(clear_time)
        self.lineEdit_1.clear()
        self.lineEdit_2.clear()

        self.timeEdit_2.setTime(clear_time)
        self.lineEdit_3.clear()
        self.lineEdit_4.clear()
       
        self.timeEdit_3.setTime(clear_time)
        self.lineEdit_5.clear()
        self.lineEdit_6.clear()
        
        self.timeEdit_4.setTime(clear_time)
        self.lineEdit_7.clear()
        self.lineEdit_8.clear()
       
        self.timeEdit_5.setTime(clear_time)
        self.lineEdit_9.clear()
        self.lineEdit_10.clear()
        
        self.timeEdit_6.setTime(clear_time)
        self.lineEdit_11.clear()
        self.lineEdit_12.clear()
        
        self.timeEdit_8.setTime(clear_time)
        self.lineEdit_13.clear()
        self.lineEdit_14.clear()
        
        self.timeEdit_19.setTime(clear_time)
        self.lineEdit_36.clear()
        self.lineEdit_37.clear()
        
        self.timeEdit_9.setTime(clear_time)
        self.lineEdit_15.clear()
        self.lineEdit_16.clear()
        
        self.timeEdit_10.setTime(clear_time)
        self.lineEdit_17.clear()
        self.lineEdit_18.clear()
        
        self.timeEdit_11.setTime(clear_time)
        self.lineEdit_19.clear()
        self.lineEdit_20.clear()
        
        self.timeEdit_12.setTime(clear_time)
        self.lineEdit_21.clear()
        self.lineEdit_22.clear()
       
        self.timeEdit_13.setTime(clear_time)
        self.lineEdit_23.clear()
        self.lineEdit_24.clear()
        
        self.timeEdit_14.setTime(clear_time)
        self.lineEdit_28.clear()
        self.lineEdit_29.clear()
        
        self.timeEdit_15.setTime(clear_time)
        self.lineEdit_30.clear()
        self.lineEdit_31.clear()
        
        self.timeEdit_16.setTime(clear_time)
        self.lineEdit_32.clear()
        self.lineEdit_33.clear()

        self.timeEdit_18.setTime(clear_time)
        self.lineEdit_38.clear()
        self.lineEdit_39.clear()

        self.timeEdit_21.setTime(clear_time)
        self.lineEdit_42.clear()
        self.lineEdit_43.clear()

        self.timeEdit_22.setTime(clear_time)
        self.lineEdit_44.clear()
        self.lineEdit_45.clear()

        self.timeEdit_23.setTime(clear_time)
        self.lineEdit_46.clear()
        self.lineEdit_47.clear()


        
        a = QMessageBox()
        a.setWindowTitle("KIOST")
        a.setText(" 초기화 완료      ")
        a.exec_()

        now = QTime.currentTime()
        now = now.toString('hh:mm:ss')
        query = "[" + now + "] 초기화 완료"
        self.listWidget.insertItem(0,query)
        
    def full_count(self):
        try:
            fullcount = self.comboBox_4.currentText()
            full_list[0] = fullcount
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Full Cycle Count 저장완료"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to save\n please check the value"
            self.listWidget.insertItem(0,query)

    def full_time(self):
        try:
            fulldate = self.dateEdit_17.date()
            full_list[1] = fulldate

            fulltime = self.timeEdit_17.time()
            full_list[2] = fulltime

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] First StartTime 저장완료"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to save\n please check the value"
            self.listWidget.insertItem(0,query)

    def full_dealy_time_minute(self):
        try:
            #fullminute = self.lineEdit.text()
            #full_list[4] = fullminute
            fullterm = self.lineEdit_25.text()
            full_list[3] = fullterm

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Cycle Term 저장완료"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to save\n please check the value"
            self.listWidget.insertItem(0,query)
            
    def full_pump(self):
        try:
            StirPWM = self.lineEdit_26.text()
            full_list[5] = StirPWM

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Stir Pump PWM 저장완료"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Failed to save\n please check the value"
            self.listWidget.insertItem(0,query)
        
    # Full Cycle 저장 함수
    def full_save(self):
        break_number = 1
        while(break_number):
            full_sec = int(full_list[3])*60+600
            datetime = QDateTime(full_list[1],full_list[2])
        
            cycle1_start = datetime
            cycle1_date = cycle1_start.date()
            cycle1_time = cycle1_start.time()
            self.dateEdit_1.setDate(cycle1_date)
            self.timeEdit_1.setTime(cycle1_time)
        
            self.lineEdit_1.setText(str(full_list[3]))
            self.lineEdit_2.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec
            
            cycle2_start = datetime.addSecs(full_st)
            cycle2_date = cycle2_start.date()
            cycle2_time = cycle2_start.time()

            self.dateEdit_2.setDate(cycle2_date)
            self.timeEdit_2.setTime(cycle2_time)
        
            self.lineEdit_3.setText(str(full_list[3]))
            self.lineEdit_4.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 2
            
            cycle3_start = datetime.addSecs(full_st)
            cycle3_date = cycle3_start.date()
            cycle3_time = cycle3_start.time()

            self.dateEdit_3.setDate(cycle3_date)
            self.timeEdit_3.setTime(cycle3_time)
        
            self.lineEdit_5.setText(str(full_list[3]))
            self.lineEdit_6.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 3
            
            cycle4_start = datetime.addSecs(full_st)
            cycle4_date = cycle4_start.date()
            cycle4_time = cycle4_start.time()

            self.dateEdit_4.setDate(cycle4_date)
            self.timeEdit_4.setTime(cycle4_time)
        
            self.lineEdit_7.setText(str(full_list[3]))
            self.lineEdit_8.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

             #--------------------------------------

            full_st = full_sec * 4
            
            cycle5_start = datetime.addSecs(full_st)
            cycle5_date = cycle5_start.date()
            cycle5_time = cycle5_start.time()

            self.dateEdit_5.setDate(cycle5_date)
            self.timeEdit_5.setTime(cycle5_time)
        
            self.lineEdit_9.setText(str(full_list[3]))
            self.lineEdit_10.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 5
            
            cycle6_start = datetime.addSecs(full_st)
            cycle6_date = cycle6_start.date()
            cycle6_time = cycle6_start.time()

            self.dateEdit_6.setDate(cycle6_date)
            self.timeEdit_6.setTime(cycle6_time)
        
            self.lineEdit_11.setText(str(full_list[3]))
            self.lineEdit_12.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 6
            
            cycle7_start = datetime.addSecs(full_st)
            cycle7_date = cycle7_start.date()
            cycle7_time = cycle7_start.time()

            self.dateEdit_8.setDate(cycle7_date)
            self.timeEdit_8.setTime(cycle7_time)
        
            self.lineEdit_13.setText(str(full_list[3]))
            self.lineEdit_14.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 7
            
            cycle8_start = datetime.addSecs(full_st)
            cycle8_date = cycle8_start.date()
            cycle8_time = cycle8_start.time()

            self.dateEdit_19.setDate(cycle8_date)
            self.timeEdit_19.setTime(cycle8_time)
        
            self.lineEdit_36.setText(str(full_list[3]))
            self.lineEdit_37.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 8
            
            cycle9_start = datetime.addSecs(full_st)
            cycle9_date = cycle9_start.date()
            cycle9_time = cycle9_start.time()

            self.dateEdit_9.setDate(cycle9_date)
            self.timeEdit_9.setTime(cycle9_time)
        
            self.lineEdit_15.setText(str(full_list[3]))
            self.lineEdit_16.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 9
            
            cycle10_start = datetime.addSecs(full_st)
            cycle10_date = cycle10_start.date()
            cycle10_time = cycle10_start.time()

            self.dateEdit_10.setDate(cycle10_date)
            self.timeEdit_10.setTime(cycle10_time)
        
            self.lineEdit_17.setText(str(full_list[3]))
            self.lineEdit_18.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 10
            
            cycle11_start = datetime.addSecs(full_st)
            cycle11_date = cycle11_start.date()
            cycle11_time = cycle11_start.time()

            self.dateEdit_11.setDate(cycle11_date)
            self.timeEdit_11.setTime(cycle11_time)
        
            self.lineEdit_19.setText(str(full_list[3]))
            self.lineEdit_20.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 11
            
            cycle12_start = datetime.addSecs(full_st)
            cycle12_date = cycle12_start.date()
            cycle12_time = cycle12_start.time()

            self.dateEdit_12.setDate(cycle12_date)
            self.timeEdit_12.setTime(cycle12_time)
        
            self.lineEdit_21.setText(str(full_list[3]))
            self.lineEdit_22.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 12
            
            cycle13_start = datetime.addSecs(full_st)
            cycle13_date = cycle13_start.date()
            cycle13_time = cycle13_start.time()

            self.dateEdit_13.setDate(cycle13_date)
            self.timeEdit_13.setTime(cycle13_time)
        
            self.lineEdit_23.setText(str(full_list[3]))
            self.lineEdit_24.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 13
            
            cycle14_start = datetime.addSecs(full_st)
            cycle14_date = cycle14_start.date()
            cycle14_time = cycle14_start.time()

            self.dateEdit_14.setDate(cycle14_date)
            self.timeEdit_14.setTime(cycle14_time)
        
            self.lineEdit_28.setText(str(full_list[3]))
            self.lineEdit_29.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 14
            
            cycle15_start = datetime.addSecs(full_st)
            cycle15_date = cycle15_start.date()
            cycle15_time = cycle15_start.time()

            self.dateEdit_15.setDate(cycle15_date)
            self.timeEdit_15.setTime(cycle15_time)
        
            self.lineEdit_30.setText(str(full_list[3]))
            self.lineEdit_31.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 15
            
            cycle16_start = datetime.addSecs(full_st)
            cycle16_date = cycle16_start.date()
            cycle16_time = cycle16_start.time()

            self.dateEdit_16.setDate(cycle16_date)
            self.timeEdit_16.setTime(cycle16_time)
        
            self.lineEdit_32.setText(str(full_list[3]))
            self.lineEdit_33.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 16
            
            cycle17_start = datetime.addSecs(full_st)
            cycle17_date = cycle17_start.date()
            cycle17_time = cycle17_start.time()

            self.dateEdit_18.setDate(cycle17_date)
            self.timeEdit_18.setTime(cycle17_time)
        
            self.lineEdit_38.setText(str(full_list[3]))
            self.lineEdit_39.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 17
            
            cycle18_start = datetime.addSecs(full_st)
            cycle18_date = cycle18_start.date()
            cycle18_time = cycle18_start.time()

            self.dateEdit_21.setDate(cycle18_date)
            self.timeEdit_21.setTime(cycle18_time)
        
            self.lineEdit_42.setText(str(full_list[3]))
            self.lineEdit_43.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 18
            
            cycle19_start = datetime.addSecs(full_st)
            cycle19_date = cycle19_start.date()
            cycle19_time = cycle19_start.time()

            self.dateEdit_22.setDate(cycle19_date)
            self.timeEdit_22.setTime(cycle19_time)
        
            self.lineEdit_44.setText(str(full_list[3]))
            self.lineEdit_45.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1

            #--------------------------------------

            full_st = full_sec * 19
            
            cycle20_start = datetime.addSecs(full_st)
            cycle20_date = cycle20_start.date()
            cycle20_time = cycle20_start.time()

            self.dateEdit_23.setDate(cycle20_date)
            self.timeEdit_23.setTime(cycle20_time)
        
            self.lineEdit_46.setText(str(full_list[3]))
            self.lineEdit_47.setText(str(full_list[5]))
            if break_number == int(full_list[0]):
                break;
            else :
                break_number = break_number + 1
            
            break;

        
        now = QTime.currentTime()
        now = now.toString('hh:mm:ss')
        query = "[" + now + "] 리스트 저장완료"
        self.listWidget.insertItem(0,query)
        

        

        
        
    def release_graph(self):
        try:
        # 그래프
            pen = pg.mkPen(color=(255, 0, 0))
            pen_2 = pg.mkPen(color=(0, 0, 255))
            self.widget.setBackground('w')

            self.curve = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#ff0000',width = 2))
            self.curve_1 = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#0000ff',width = 2))
            self.curve2 = pg.ScatterPlotItem(pen=pg.mkPen(color='#ff0000') ,name="hi")
            self.curve2_1 = pg.ScatterPlotItem(pen=pg.mkPen(color='#0000ff') ,name="hi")

            f = open(self.filename[0], 'r')
            self.lines = f.readlines()
            self.cyclecount = int(self.lines[0].split()[1])
            self.len_lines = len(self.lines)
        

            self.number_list = []
            self.oxyzen_value_list = []
            self.oxyzen_value_list_2 = []
            self.temp_value_list = []
            self.temp_value_list_2 = []
            

            
            
            for i in range(self.len_lines-self.cyclecount-5):
                self.number_list.append(i+1)
                self.oxyzen_value_list.append(float(self.lines[self.cyclecount+i+4].split()[5]))
                self.oxyzen_value_list_2.append(float(self.lines[self.cyclecount+i+4].split()[6]))
                self.temp_value_list.append(float(self.lines[self.cyclecount+i+4].split()[7]))
                self.temp_value_list_2.append(float(self.lines[self.cyclecount+i+4].split()[8]))
               
            

            
            self.p2.addItem(self.curve2)
            self.p2.addItem(self.curve2_1)

            

            def updateViews():
                
                self.p2.setGeometry(self.widget.getViewBox().sceneBoundingRect())
                self.p2.linkedViewChanged(self.widget.getViewBox(), self.p2.XAxis)

            updateViews()
            self.widget.getViewBox().sigResized.connect(updateViews)

            self.curve.setData(x=self.number_list, y=self.oxyzen_value_list)
            self.curve_1.setData(x=self.number_list, y=self.oxyzen_value_list_2)
            self.curve2.setData(x=self.number_list, y=self.temp_value_list)
            self.curve2_1.setData(x=self.number_list, y=self.temp_value_list_2)


            

##            self.graph_no_count = 0
##            self.graph_no_count_2 = 0
##            
            self.graph_cycle_count = 1
            self.graph_cycle_count_2 = 1
##            self.graph_stir_count = 0
##            self.graph_fill_count = 0
            self.stir_start_list = []
            self.stir_end_list = []

            self.fill_start_list = []
            self.fill_end_list = []
            

            self.stir_list = []
            self.fill_list = []

            for j in range(int(self.lines[-1].split()[0])):
                self.stir_list.append(self.lines[j+self.cyclecount+4].split()[11])
                self.fill_list.append(self.lines[j+self.cyclecount+4].split()[12])

            
            self.stir_list.append(0)
            self.stir_list.insert(0,0)

            self.fill_list.append(0)
            self.fill_list.insert(0,0)


            

            for k in range(int(self.lines[-1].split()[0])):
                if  int(self.stir_list[k+1]) == 1 and int(self.stir_list[k]) == 0 :
                    self.stir_start_list.append(k+1)
                    
                if int(self.stir_list[k+1]) == 1 and int(self.stir_list[k+2]) == 0:
                    self.stir_end_list.append(k+1)

                if  int(self.fill_list[k+1]) == 1 and int(self.fill_list[k]) == 0 :
                    self.fill_start_list.append(k+1)
                    
                if int(self.fill_list[k+1]) == 1 and int(self.fill_list[k+2]) == 0:
                    self.fill_end_list.append(k+1)




            for u in range(len(self.stir_start_list)):
                
                self.lr = pg.LinearRegionItem([int(self.stir_start_list[u]),int(self.stir_end_list[u])], pen = (0, 0, 255), brush =(0, 0, 255, 50))
                self.widget.addItem(self.lr)

            for y in range(len(self.fill_start_list)):
                
                self.lr = pg.LinearRegionItem([int(self.fill_start_list[y]),int(self.fill_end_list[y])], pen=(255, 0, 0),  brush=(255, 128, 0, 50))
                self.widget.addItem(self.lr)

                
        
            

















   








                    
##            self.lr = pg.LinearRegionItem([1,self.stir_count_2])
##            self.widget.addItem(self.lr)











            
##
##            while True:
##
##                
##                if self.lines[i]



























                
            
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 그래프 출력완료"
            self.listWidget.insertItem(0,query)
    ##        self.lineEdit_35.setText("완료")

            f.close()
        except AttributeError:
            
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 그래프 출력 실패"
            self.listWidget.insertItem(0,query)

        except FileNotFoundError and UnicodeDecodeError:

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 파일 경로를 다시확인해주세요"
            self.listWidget.insertItem(0,query)

    

    
    def release_temp(self):
        try:
            self.widget.clear()
            self.p2.clear()
            self.widget.addLegend(offset = (820,5))
            curve = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#ff0000',width = 2), name="S1")
            curve_1 = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#0000ff',width = 2) ,name="S2")
            curve2 = pg.ScatterPlotItem(pen=pg.mkPen(color='#ff0000') ,name="hi")
            curve2_1 = pg.ScatterPlotItem(pen=pg.mkPen(color='#0000ff') ,name="hi")
            self.p2.addItem(curve2)
            self.p2.addItem(curve2_1)

            def updateViews():
                
                self.p2.setGeometry(self.widget.getViewBox().sceneBoundingRect())
                self.p2.linkedViewChanged(self.widget.getViewBox(), self.p2.XAxis)

            updateViews()
            self.widget.getViewBox().sigResized.connect(updateViews)
            curve2.setData(x=self.number_list, y=self.temp_value_list)
            curve2_1.setData(x=self.number_list, y=self.temp_value_list_2)

            for u in range(len(self.stir_start_list)):
                
                self.lr = pg.LinearRegionItem([int(self.stir_start_list[u]),int(self.stir_end_list[u])], pen = (0, 0, 255), brush =(0, 0, 255, 50))
                self.widget.addItem(self.lr)

            for y in range(len(self.fill_start_list)):
                
                self.lr = pg.LinearRegionItem([int(self.fill_start_list[y]),int(self.fill_end_list[y])], pen=(255, 0, 0),  brush=(255, 128, 0, 50))
                self.widget.addItem(self.lr)

            

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 온도 그래프 출력완료"
            self.listWidget.insertItem(0,query)
    ##        self.lineEdit_35.setText("완료")
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 온도 그래프 출력실패"
            self.listWidget.insertItem(0,query)

    def release_oxyzen(self):
        try:
            self.widget.clear()
            self.p2.clear()
            self.widget.addLegend(offset = (820,5))
            curve = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#ff0000',width = 2), name="S1")
            curve_1 = self.widget.plot(x=[], y=[], pen=pg.mkPen(color='#0000ff',width = 2) ,name="S2")


            def updateViews():
                
                self.p2.setGeometry(self.widget.getViewBox().sceneBoundingRect())
                self.p2.linkedViewChanged(self.widget.getViewBox(), self.p2.XAxis)

            updateViews()
            self.widget.getViewBox().sigResized.connect(updateViews)
            curve.setData(x=self.number_list, y=self.oxyzen_value_list)
            curve_1.setData(x=self.number_list, y=self.oxyzen_value_list_2)
            curve2 = pg.ScatterPlotItem(pen=pg.mkPen(color='#ff0000') ,name="hi")
            curve2_1 = pg.ScatterPlotItem(pen=pg.mkPen(color='#0000ff') ,name="hi")
            self.p2.addItem(curve2)
            self.p2.addItem(curve2_1)

            for u in range(len(self.stir_start_list)):
                
                self.lr = pg.LinearRegionItem([int(self.stir_start_list[u]),int(self.stir_end_list[u])], pen = (0, 0, 255), brush =(0, 0, 255, 50))
                self.widget.addItem(self.lr)

            for y in range(len(self.fill_start_list)):
                
                self.lr = pg.LinearRegionItem([int(self.fill_start_list[y]),int(self.fill_end_list[y])], pen=(255, 0, 0),  brush=(255, 128, 0, 50))
                self.widget.addItem(self.lr)

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 산소 그래프 출력완료"
            self.listWidget.insertItem(0,query)
    ##        self.lineEdit_35.setText("완료")
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 산소 그래프 출력실패"
            self.listWidget.insertItem(0,query)
            
    def update_clear(self):
        try:
            self.widget.clear()
            self.p2.clear()
            self.widget.clear()
            self.p2.clear()
            self.widget.clear()
            self.p2.clear()
            self.number_list.clear()
            self.oxyzen_value_list.clear()
            self.oxyzen_value_list.clear()
            self.temp_value_list.clear()
            self.temp_value_list_2.clear()
            
    ##        self.lineEdit_35.clear()

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 그래프 초기화 완료"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 그래프 초기화 실패"
            self.listWidget.insertItem(0,query)

        

    def transfer_start(self):


        
        try:
            if(self.ser_checking_num == 1):
                self.ser.close()
            
            
            self.ser = serial.Serial(
                port = self.ui_serial.COM_value,
                baudrate = int(self.ui_serial.Baud_value),
                stopbits=serial.STOPBITS_ONE, 
                bytesize=serial.EIGHTBITS,       
                timeout=1                  
                )
            

            
            self.ser.write("Start\n".encode())

            self.ser_checking_num = 1

            self.check_variable = "Check"

##            now = QTime.currentTime()
##            now = now.toString('hh:mm:ss')
##            query = "[" + now + "] CPU 연결 시작"
##            self.listWidget.insertItem(0,query)
            
            time.sleep(0.2)            
            self.k_list = []
            self.k = self.ser.readline().decode('utf-8')
            self.k_list.append(self.k)
            self.ser.write("".encode())
            for x in self.k_list:
                if "CONNECT_SUCCESS" in x:
                    now = QTime.currentTime()
                    now = now.toString('hh:mm:ss')
                    query = "[" + now + "] CPU 연결 성공"
                    self.listWidget.insertItem(0,query)
                else :
                    now = QTime.currentTime()
                    now = now.toString('hh:mm:ss')
                    query = "[" + now + "] CPU 연결 실패"
                    self.listWidget.insertItem(0,query)
                    self.ser.close()
    
            

            

        
        except FileNotFoundError  and serial.SerialException:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] CPU 연결 실패"
            self.listWidget.insertItem(0,query)
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] CPU 연결 실패"
            self.listWidget.insertItem(0,query)
        

    def transfer_text_cpu(self):
        if(self.check_variable=="Transfer"):
           top = 1
           while(top):
                x = self.ser.readline().decode()
                os_list.append(x)
                for x in os_list :
                    if "Cycle" in x:
                        data = x.split()
                        f = open(data[0],'w')
                        for i in range(len(data)-1):
                            f.write(data[i+1])
                            f.write("\n")
                            

    # Serial Port 연결 창
    def serialport_window(self):
        self.window_serial = QtWidgets.QMainWindow()
        self.ui_serial = Ui_SerialWindow()
        self.ui_serial.setupUi(self.window_serial)
        self.window_serial.show()


           

    # Serial Port 연결 확인테스트
    def serial_test(self):
        print(self.ui_serial.COM_value)

    def serial_test_2(self):
        # 시리얼, 리스트위젯 관련
        
        
        
        try:
            
##            query = "---------------------------------"
##            self.listWidget.insertItem(0,query)
            query = "STOP BITS : "+str(self.ui_serial.Stopbits_value)
            self.listWidget.insertItem(0,query)
            query = "PARITY : "+str(self.ui_serial.Parity_value)
            self.listWidget.insertItem(0,query)
            query = "FLOW CONTROL : "+str(self.ui_serial.Flowcontrol_value)
            self.listWidget.insertItem(0,query)
            query = "BITS : "+str(self.ui_serial.Databits_value)
            self.listWidget.insertItem(0,query)
            query = "BAUD RATE : "+str(self.ui_serial.Baud_value)
            self.listWidget.insertItem(0,query)
            query = "PORT : "+str(self.ui_serial.COM_value)
            self.listWidget.insertItem(0,query)
                
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Serial 설정 확인"
            self.listWidget.insertItem(0,query)
 
##            query = "---------------------------------"
##            self.listWidget.insertItem(0,query)
                
                
            
                
            self.check_number = 0
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] Please check the serial port value"
            self.listWidget.insertItem(0,query)
        #self.ser.close()
    def check_text_transfer(self): # 파일이름 출력

        k_list=[]

        try:
            
            t_number=1
            self.ser.write("TEXT_CONFIRM".encode())
            while t_number:
                self.k = self.ser.readline().decode('utf-8')
                self.k_list.append(self.k)
                self.file_list = [0]
                for k_2 in self.k_list:
                    if "TEXT_TRANSFER" in k_2:
                        self.file_list.append(self.ser.readline().decode('utf-8'))
                        t_number = 0
                        time.sleep(0.5)
                        
                        

            
            self.file_list_2 = self.file_list[1].split(" ")
            self.file_list_2.reverse()
            del self.file_list_2[0]
            #print(len(self.file_list_2))

            for i in range(len(self.file_list_2)):
                query = str(self.file_list_2[i])
                print(query)
                self.listWidget.insertItem(0,query)
            
          
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 텍스트 파일 이름 출력"
            self.listWidget.insertItem(0,query)
            
            #self.file_list[1].clear()
            #self.file_list2.clear()

        except AttributeError :
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 연결을 다시확인해주세요"
            self.listWidget.insertItem(0,query)

    def logging_file_transfer(self):

##        self.listWidget.currentItem().text()
        try:
            if(self.th_number == 1):
                self.widget_listname = self.listWidget.currentItem().text()
                self.widget_listname=self.widget_listname.split("-")[0]
                if "txt" in self.widget_listname:
                    self.ser.write(self.widget_listname.encode())
                    t_number=1
                    t_number_2 = 0
                    while t_number:
                        time.sleep(0.5)
                        self.k = self.ser.readline().decode('utf-8')
                        self.k_list.append(self.k)
                        
                        self.file_list = [0]
                        for k_2 in self.k_list:
                            if "LOGGINGDATA_TRANSFER" in k_2:
                                f = open(self.filename[0],'w')
                                
                                f.close()
                                while True:
                                    self.logging_string = str(self.ser.readline().decode('utf-8'))                          
                                    f = open(self.filename[0],'a')
                                    if not (self.logging_string=="END"):
                                        if (self.th_number == 1):
                                            f.write(str(self.logging_string))
                                            if t_number_2 == 0:
                                                query = self.filename[0]
                                                self.listWidget.insertItem(0,query)
                                                now = QTime.currentTime()
                                                now = now.toString('hh:mm:ss')
                                                query = "[" + now + "]"+" 로깅 파일 저장시작"
                                                self.listWidget.insertItem(0,query)
                                                t_number_2 = 1
                                    else:
                                        f.close()
                                        query = self.filename[0]
                                        self.listWidget.insertItem(0,query)
                                        now = QTime.currentTime()
                                        now = now.toString('hh:mm:ss')
                                        query = "[" + now + "] 로깅 파일 저장완료"
                                        self.listWidget.insertItem(0,query)
                                        t_number = 0
                                        self.k_list.clear()
                                        self.th_number = 0
                                   

                                        break
                else:
                    now = QTime.currentTime()
                    now = now.toString('hh:mm:ss')
                    query = "[" + now + "] 다시확인해주세요"
                    self.listWidget.insertItem(0,query)
                    

    
            
            
##            self.file_list_2 = []
##            self.file_list_2 = self.file_list[0].split("\n")
##            
##            f = open("./logging_file/"+self.widget_listname,'w')
##            for u in range(len(self.file_list_2)):
##                f.write(self.file_list_2[u])
##                f.write("\n")
##            f.close()
            
##            f = open("./logging_file/"+self.widget_listname,'w')
##            for u in range(len(self.file_list)-1):
##                f.write(self.file_list[u])
            

            

            
        except AttributeError:
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 다시확인해주세요"
            self.listWidget.insertItem(0,query)
    
    
        
    
    def fileopen(self):
        
        #listwidget에서 선택한 txt파일 이름을 긁어와서  './'뒤에 추가하면 알아서 파일이름 자동추가됨
        try:
            txtname=self.listWidget.currentItem().text()
            txtname=txtname.split("-")[0]
            self.filename = QFileDialog.getSaveFileName(MainWindow, 'Save file', './'+txtname)
        except AttributeError:
            self.filename = QFileDialog.getSaveFileName(MainWindow, 'Save file', './')
            
            
            
        
        #self.filename = QFileDialog.getSaveFileName(MainWindow, 'Save file', './'+txtname)
        if(self.filename[0]==""):
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 경로를 다시확인해주세요"
            self.listWidget.insertItem(0,query)

        else:
            query = self.filename[0]
            self.listWidget.insertItem(0,query)
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 파일 저장경로 설정완료"
            self.listWidget.insertItem(0,query)
            
    def th(self):
        self.th_number = 1
        if self.th_number == 1:
            th = threading.Thread(target = self.logging_file_transfer)
            th.deamon = True
            th.start()

    def divide_text_file(self):
        try:

            self.f = open(self.filename[0], 'r')
            self.lines = self.f.readlines()
            self.cyclecount = int(self.lines[0].split()[1])
            self.len_lines = len(self.lines)
            self.f.close()
            
            self.divide_filename = self.filename[0]

            self.find_logging = self.divide_filename.find('logging')
            
            self.divide_filename_str = self.divide_filename[self.find_logging:-1]+str("t")
            self.final_no_count = self.lines[-1][0]

##            print(self.lines[-1].split()[0])

            self.divide_count =  self.cyclecount + 4  # +4번째 줄부터 시작
            self.divide_count_2 = 1
            self.config_value = 1

            for i in range(self.cyclecount):
                self.f_2 = open(self.divide_filename[0:self.find_logging-1] +"/CYCLE_"
                                +str(i+1)+"_"+self.divide_filename_str,"w")
                for i in range(self.cyclecount+4):
                        self.f_2.write(self.lines[i])
                        self.config_value = 0
                self.f_2.close()

            for j in range(self.cyclecount):
                    
                while True:
                    try:
                        if int(self.lines[self.divide_count].split()[1]) == self.divide_count_2 + 1:

                            self.divide_count_2 += 1
                            break

                        if int(self.lines[self.divide_count].split()[0]) -1 == int(self.lines[-1].split()[0]):
                            break

                        self.f_2 = open(self.divide_filename[0:self.find_logging-1] +"/CYCLE_"
                                +str(j+1)+"_"+self.divide_filename_str,"a")
                        self.f_2.write(self.lines[self.divide_count])
                        self.f_2.close()
                        self.divide_count += 1
                        
                    except IndexError:
                        break
                    
                    

                    

                    
                    

                    
            for i in range(self.cyclecount):
                query = self.divide_filename[0:self.find_logging-1] +"/CYCLE_"+str(i+1)+"_"+self.divide_filename_str
            
                self.listWidget.insertItem(0,query)

            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 파일 저장경로 설정완료"
            self.listWidget.insertItem(0,query)
                    

        

        except Exception as e :
            now = QTime.currentTime()
            now = now.toString('hh:mm:ss')
            query = "[" + now + "] 다시확인해주세요"
            self.listWidget.insertItem(0,query)
            
            
            
        
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    #aw = AnimationWidget()
    
    
    sys.exit(app.exec_())
